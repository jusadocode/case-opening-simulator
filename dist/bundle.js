/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("/////////////////////////////////\r\n// Dont use the word case in the code\r\n/////////////////////////////////\r\n\r\n\r\n// Change this for production build (it wont be using localhost)\r\nlet baseUrl = 'http:localhost:8080';\r\n\r\n\r\n// if(process.env.NODE_ENV === 'production') {\r\n//     baseUrl = window.location.href;\r\n//     baseUrl = baseUrl.slice(0, -1);\r\n// }\r\n\r\nconsole.log(baseUrl);\r\nconst button = document.querySelector('.open-button');\r\n\r\nlet newButton;\r\n\r\nlet statusText = document.querySelector('#status');\r\n\r\nlet moneyStatus = 4.35;\r\nconst keyPrice = 2.34;\r\n\r\nlet itemHolder = document.querySelector('.item-holder');\r\n\r\nconst caseOpenWindow = document.querySelector('.case-open-window-holder');\r\n\r\nlet caseImageSection = document.querySelector('.case-image-section');\r\n\r\nlet caseSelect = document.querySelector('select');\r\n\r\nconst itemMarker = document.querySelector('.case-open-marker');\r\n\r\n\r\n\r\n/////////////////////////////////\r\n// Case variables\r\n/////////////////////////////////\r\nlet cases = [];\r\nconst rollItemCount = 150;\r\nlet rolledItems = [];\r\nlet distribution = [];\r\n\r\nlet selectedCase = {};\r\nlet fixedItemCount = 18;\r\n\r\nlet itemRarityCounts = {\r\n  Consumer: 0,\r\n  Industrial: 0,\r\n  'Mil-Spec Grade': 0,\r\n  Restricted: 0,\r\n  Classified: 0,\r\n  Covert: 0,\r\n  Contraband: 0\r\n};\r\n\r\n\r\ninitializeCaseLoad();\r\n\r\nasync function initializeCaseLoad() {\r\n\r\n  await fetchCaseData();\r\n\r\n  cases.map(async (crate, index) => {\r\n    let option = document.createElement('option');\r\n    option.value = index;\r\n    option.textContent = crate.name;\r\n\r\n    caseSelect.appendChild(option);\r\n  });\r\n\r\n  setSelectedCase(cases[caseSelect.value]);\r\n\r\n  caseOpenWindow.disabled = true;\r\n\r\n\r\n  const caseItemsList = selectedCase.contains;\r\n\r\n\r\n\r\n  // console.log(caseItemsList);\r\n\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    // randomization will be hugely reworked\r\n    let randomItem = caseItemsList[getRandomInt(0, caseItemsList.length - 1)];\r\n\r\n    let newItem = document.createElement('div');\r\n    newItem.classList.add('item');\r\n\r\n    let img = document.createElement('img');\r\n\r\n    img.src = randomItem.image;\r\n\r\n\r\n    img.classList.add('image');\r\n    // newItem.textContent = randomItem.name;\r\n\r\n    const rarityColor = getRarityColor(randomItem);\r\n\r\n    newItem.style.backgroundImage = 'linear-gradient(white 40%, '\r\n            + rarityColor + ')';\r\n    let rarityBox = document.createElement('div');\r\n    rarityBox.classList.add('item-rarity-box');\r\n    rarityBox.style.backgroundColor = rarityColor;\r\n    newItem.appendChild(img);\r\n    newItem.appendChild(rarityBox);\r\n    itemHolder.appendChild(newItem);\r\n\r\n    itemHolder.appendChild(newItem);\r\n\r\n  }\r\n\r\n\r\n  button.addEventListener('click', () => openCase());\r\n  button.addEventListener('click', () => instantiateMoneyAmount('red'));\r\n\r\n  newButton = button.cloneNode(true);\r\n\r\n  newButton.style.width = '50%';\r\n  newButton.textContent = `Open another (-${keyPrice}€)`;\r\n  newButton.style.width = '50%';\r\n  newButton.style.borderRadius = '10px';\r\n\r\n\r\n  newButton.addEventListener('click', () => openCase());\r\n  newButton.addEventListener('click', () => instantiateMoneyAmount('red'));\r\n\r\n\r\n  caseSelect.addEventListener('change', () => setSelectedCase(cases[caseSelect.value]));\r\n\r\n}\r\n\r\n\r\nasync function openCase() {\r\n\r\n  clearUpWindow();\r\n\r\n  moneyStatus -= keyPrice;\r\n  updateMoneyStatus();\r\n  //clearUpWindow();\r\n  console.log(cases[caseSelect.value]);\r\n  let caseItemList = selectedCase.contains;\r\n  let knives = selectedCase.contains_rare;\r\n\r\n  // Adding a random knife from the case to the table\r\n\r\n  let randomKnife = knives[getRandomInt(0, 8)];\r\n\r\n  randomKnife.odds = 0.26;\r\n\r\n  if (caseItemList.length < fixedItemCount)\r\n    caseItemList.push(randomKnife);\r\n\r\n  console.log(caseItemList);\r\n\r\n  distribution = createDistribution(caseItemList, 100);\r\n\r\n  let translateX = getRandomInt(-5000, -6000);\r\n\r\n  caseOpenWindow.style.setProperty('--random-translateXb', `${translateX}px`);\r\n  translateX -= 352; // roller is positioned 352px from the start\r\n  const itemNumber = Math.floor((translateX / 152) * (-1));\r\n  // console.log(itemNumber);\r\n  button.classList.add('animated');\r\n  button.classList.add('bounceOut');\r\n  button.disabled = true;\r\n\r\n  itemHolder.innerHTML = '';\r\n  caseOpenWindow.classList.add('animated');\r\n  caseOpenWindow.classList.add('flipInX');\r\n\r\n\r\n  setTimeout(async () => {\r\n\r\n    button.disabled = false;\r\n    button.classList.remove('animated');\r\n    button.classList.remove('bounceOut');\r\n\r\n    caseOpenWindow.classList.remove('animated');\r\n    caseOpenWindow.classList.remove('flipInX');\r\n\r\n    let itemWon = rolledItems[itemNumber];\r\n\r\n    let obtainedItem = document.createElement('div');\r\n    obtainedItem.classList.add('obtainedItem');\r\n    let img = document.createElement('img');\r\n\r\n    if (itemWon.image)\r\n      img.src = itemWon.image;\r\n    else\r\n      img.src = '../data/images/xray.png';\r\n\r\n    img.classList.add('obtained-image');\r\n\r\n    obtainedItem.appendChild(img);\r\n\r\n    const rarityColor = getRarityColor(itemWon);\r\n\r\n    let rarityBox = document.createElement('div');\r\n    rarityBox.classList.add('obtained-item-rarity-box');\r\n    rarityBox.style.backgroundColor = rarityColor;\r\n\r\n\r\n    obtainedItem.classList.add('animated');\r\n    obtainedItem.classList.add('fadeIn');\r\n\r\n    let info = [];\r\n\r\n    const textParts = itemWon.name.split(' ');\r\n    // console.log(textParts);\r\n\r\n    let price = '';\r\n    let stattrack = '';\r\n\r\n    // Call to backend\r\n    await callApi(`data/price?&weapon=${itemWon.weapon}&skin=${itemWon.pattern}&wear=${itemWon.wears[0]}&itemID=${itemWon.id}`)\r\n      .then((data) => {\r\n        if (data) {\r\n          let skinPriceText = data.lowest_price;\r\n          price = 'Market price: ' + skinPriceText;\r\n          skinPriceText = skinPriceText.replace(',', '.');\r\n          const worth = skinPriceText.slice(0, -1);\r\n          console.log(moneyStatus);\r\n          moneyStatus += parseFloat(worth);\r\n          console.log(moneyStatus);\r\n\r\n          instantiateMoneyAmount('green');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        price = 'Market price not available';\r\n      });\r\n\r\n\r\n    let float = 'Float: ' + getRandomFloat(itemWon.min_float, itemWon.max_float);\r\n\r\n\r\n    itemRarityCounts[itemWon.rarity]++;\r\n\r\n    console.log(itemRarityCounts);\r\n\r\n    info.push(price);\r\n    info.push(float);\r\n\r\n    let obtainedText = document.createElement('div');\r\n    obtainedText.style.margin = '1rem';\r\n\r\n    info.forEach((element) => {\r\n      let par = document.createElement('p');\r\n      par.textContent = element;\r\n      par.style.color = 'white';\r\n      obtainedText.appendChild(par);\r\n    });\r\n\r\n    //itemWon.style.setProperty('border', '3px solid yellow');\r\n    obtainedItem.appendChild(obtainedText);\r\n\r\n    obtainedItem.appendChild(newButton);\r\n\r\n    caseOpenWindow.appendChild(obtainedItem);\r\n\r\n    updateMoneyStatus();\r\n\r\n  }, 6000);\r\n\r\n\r\n\r\n  for (let i = 0; i < rollItemCount; i++) {\r\n\r\n    let randomItem = randomGenItem(caseItemList, distribution);\r\n    rolledItems.push(randomItem);\r\n    let newItem = document.createElement('div');\r\n    newItem.classList.add('item');\r\n    newItem.classList.add('animatedItem');\r\n    newItem.classList.add('moveLeft');\r\n    let img = document.createElement('img');\r\n\r\n    if (randomItem.image) {\r\n      // exceedingly_rare_item.png\r\n      if (randomItem.category === 'Knives' || randomItem.category === 'Gloves')\r\n        img.src = '../data/images/exceedingly_rare_item.png';\r\n      else\r\n        img.src = randomItem.image;\r\n    }\r\n    else\r\n      img.src = '../data/images/xray.png';\r\n\r\n    img.classList.add('image');\r\n    // newItem.textContent = randomItem.name;\r\n\r\n    const rarityColor = getRarityColor(randomItem);\r\n\r\n    newItem.style.backgroundImage = 'linear-gradient(white 40%, '\r\n            + rarityColor + ')';\r\n    let rarityBox = document.createElement('div');\r\n    rarityBox.classList.add('item-rarity-box');\r\n    rarityBox.style.backgroundColor = rarityColor;\r\n\r\n    newItem.appendChild(img);\r\n    newItem.appendChild(rarityBox);\r\n    itemHolder.appendChild(newItem);\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction updateMoneyStatus() {\r\n  statusText.textContent = 'State: ' + moneyStatus.toFixed(2) + '€';\r\n}\r\n\r\n\r\nfunction clearUpWindow() {\r\n  caseOpenWindow.lastChild.remove();\r\n  rolledItems = [];\r\n}\r\n\r\nfunction getRarityColor(item) {\r\n\r\n  if (item.category === 'Knives' || item.category === 'Gloves')\r\n    return '#ffcc00';\r\n\r\n  switch (item.rarity) {\r\n  case ('Consumer'):\r\n    return '#afafaf';\r\n  case ('Industrial'):\r\n    return '#6496e1';\r\n  case ('Mil-Spec Grade'):\r\n    return '#4b69cd';\r\n  case ('Restricted'):\r\n    return '#8847ff';\r\n  case ('Classified'):\r\n    return '#d32ce6';\r\n  case ('Covert'):\r\n    return '#eb4b4b';\r\n  case ('Contraband'):\r\n    return '#886a08';\r\n  default:\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getRarityOdds(crate) {\r\n  const caseRarityCounts = {\r\n    Consumer: 0,\r\n    Industrial: 0,\r\n    'Mil-Spec Grade': 0,\r\n    Restricted: 0,\r\n    Classified: 0,\r\n    Covert: 0,\r\n    Contraband: 0\r\n  };\r\n\r\n  // Count the rarities in the selected case\r\n  crate.contains.forEach((item) => {\r\n    caseRarityCounts[item.rarity]++;\r\n  });\r\n\r\n  // Return the count object\r\n  return caseRarityCounts;\r\n}\r\n\r\n/////////////////////////////////\r\n// function for updating the money text with any color\r\n/////////////////////////////////\r\n\r\nfunction instantiateMoneyAmount(color) {\r\n\r\n  statusText.style.color = color;\r\n  statusText.classList.add('highlight-amount');\r\n  setTimeout(() => {\r\n    statusText.style.color = 'black';\r\n    statusText.classList.remove('highlight-amount');\r\n  }, 1000);\r\n}\r\n\r\n\r\n/////////////////////////////////\r\n// Mathematical utilities\r\n/////////////////////////////////\r\n\r\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction getRandomFloat(min, max) {\r\n  return (Math.random() * (max - min) + min).toFixed(4);\r\n}\r\n\r\nfunction randomGenItem(array, distribution) {\r\n  const index = randomIndex(distribution);\r\n  return array[index];\r\n}\r\n\r\nfunction createDistribution(items, size) {\r\n  const distribution = [];\r\n  const weights = items.map(item => (item.odds / (selectedCase.caseRarityCounts[item.rarity] || 1) / 100));\r\n  console.log(weights);\r\n\r\n  const sum = weights.reduce((accum, currVal) => accum + currVal);\r\n  console.log(sum);\r\n  const quant = size / sum;\r\n  for (let i = 0; i < weights.length; ++i) {\r\n    const limit = quant * weights[i];\r\n    for (let j = 0; j < limit; ++j) {\r\n      distribution.push(i);\r\n    }\r\n  }\r\n  return distribution;\r\n}\r\n\r\nfunction randomIndex(distribution) {\r\n  const index = Math.floor(distribution.length * Math.random()); // random index\r\n  return distribution[index];\r\n}\r\n\r\nfunction setSelectedCase(crate) {\r\n  selectedCase = crate;\r\n  fixedItemCount = crate.contains.length + 1;\r\n  console.log('Items: ' + selectedCase.contains.length);\r\n  if (!selectedCase.caseRarityCounts) {\r\n    selectedCase.caseRarityCounts = getRarityOdds(selectedCase);\r\n  }\r\n\r\n  let caseImage = document.createElement('img');\r\n\r\n  caseImage.src = selectedCase.image;\r\n  if (caseImageSection.hasChildNodes()) {\r\n    caseImageSection.removeChild(caseImageSection.lastChild);\r\n    caseImageSection.appendChild(caseImage);\r\n  }\r\n\r\n}\r\n\r\n/////////////////////////////////\r\n// Functions for fetching data from server\r\n/////////////////////////////////\r\n\r\nasync function callApi(urlPostfix) {\r\n  let url = baseUrl + '/' + urlPostfix;\r\n\r\n  console.log(url);\r\n  return fetch(url)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      // Return an error value or handle the error as needed\r\n      return null; // You can choose an appropriate error value here\r\n    });\r\n}\r\n\r\nasync function fetchCaseData() {\r\n  await callApi('data/cases')\r\n    .then((data) => {\r\n      console.log(data);\r\n      cases = data;\r\n      console.log(cases);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBEb250IHVzZSB0aGUgd29yZCBjYXNlIGluIHRoZSBjb2RlXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuXHJcbi8vIENoYW5nZSB0aGlzIGZvciBwcm9kdWN0aW9uIGJ1aWxkIChpdCB3b250IGJlIHVzaW5nIGxvY2FsaG9zdClcclxubGV0IGJhc2VVcmwgPSAnaHR0cDpsb2NhbGhvc3Q6ODA4MCc7XHJcblxyXG5cclxuLy8gaWYocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4vLyAgICAgYmFzZVVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xyXG4vLyAgICAgYmFzZVVybCA9IGJhc2VVcmwuc2xpY2UoMCwgLTEpO1xyXG4vLyB9XHJcblxyXG5jb25zb2xlLmxvZyhiYXNlVXJsKTtcclxuY29uc3QgYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm9wZW4tYnV0dG9uJyk7XHJcblxyXG5sZXQgbmV3QnV0dG9uO1xyXG5cclxubGV0IHN0YXR1c1RleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3RhdHVzJyk7XHJcblxyXG5sZXQgbW9uZXlTdGF0dXMgPSA0LjM1O1xyXG5jb25zdCBrZXlQcmljZSA9IDIuMzQ7XHJcblxyXG5sZXQgaXRlbUhvbGRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pdGVtLWhvbGRlcicpO1xyXG5cclxuY29uc3QgY2FzZU9wZW5XaW5kb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FzZS1vcGVuLXdpbmRvdy1ob2xkZXInKTtcclxuXHJcbmxldCBjYXNlSW1hZ2VTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhc2UtaW1hZ2Utc2VjdGlvbicpO1xyXG5cclxubGV0IGNhc2VTZWxlY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKTtcclxuXHJcbmNvbnN0IGl0ZW1NYXJrZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FzZS1vcGVuLW1hcmtlcicpO1xyXG5cclxuXHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gQ2FzZSB2YXJpYWJsZXNcclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmxldCBjYXNlcyA9IFtdO1xyXG5jb25zdCByb2xsSXRlbUNvdW50ID0gMTUwO1xyXG5sZXQgcm9sbGVkSXRlbXMgPSBbXTtcclxubGV0IGRpc3RyaWJ1dGlvbiA9IFtdO1xyXG5cclxubGV0IHNlbGVjdGVkQ2FzZSA9IHt9O1xyXG5sZXQgZml4ZWRJdGVtQ291bnQgPSAxODtcclxuXHJcbmxldCBpdGVtUmFyaXR5Q291bnRzID0ge1xyXG4gIENvbnN1bWVyOiAwLFxyXG4gIEluZHVzdHJpYWw6IDAsXHJcbiAgJ01pbC1TcGVjIEdyYWRlJzogMCxcclxuICBSZXN0cmljdGVkOiAwLFxyXG4gIENsYXNzaWZpZWQ6IDAsXHJcbiAgQ292ZXJ0OiAwLFxyXG4gIENvbnRyYWJhbmQ6IDBcclxufTtcclxuXHJcblxyXG5pbml0aWFsaXplQ2FzZUxvYWQoKTtcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGluaXRpYWxpemVDYXNlTG9hZCgpIHtcclxuXHJcbiAgYXdhaXQgZmV0Y2hDYXNlRGF0YSgpO1xyXG5cclxuICBjYXNlcy5tYXAoYXN5bmMgKGNyYXRlLCBpbmRleCkgPT4ge1xyXG4gICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xyXG4gICAgb3B0aW9uLnZhbHVlID0gaW5kZXg7XHJcbiAgICBvcHRpb24udGV4dENvbnRlbnQgPSBjcmF0ZS5uYW1lO1xyXG5cclxuICAgIGNhc2VTZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICB9KTtcclxuXHJcbiAgc2V0U2VsZWN0ZWRDYXNlKGNhc2VzW2Nhc2VTZWxlY3QudmFsdWVdKTtcclxuXHJcbiAgY2FzZU9wZW5XaW5kb3cuZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuXHJcbiAgY29uc3QgY2FzZUl0ZW1zTGlzdCA9IHNlbGVjdGVkQ2FzZS5jb250YWlucztcclxuXHJcblxyXG5cclxuICAvLyBjb25zb2xlLmxvZyhjYXNlSXRlbXNMaXN0KTtcclxuXHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgLy8gcmFuZG9taXphdGlvbiB3aWxsIGJlIGh1Z2VseSByZXdvcmtlZFxyXG4gICAgbGV0IHJhbmRvbUl0ZW0gPSBjYXNlSXRlbXNMaXN0W2dldFJhbmRvbUludCgwLCBjYXNlSXRlbXNMaXN0Lmxlbmd0aCAtIDEpXTtcclxuXHJcbiAgICBsZXQgbmV3SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbmV3SXRlbS5jbGFzc0xpc3QuYWRkKCdpdGVtJyk7XHJcblxyXG4gICAgbGV0IGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cclxuICAgIGltZy5zcmMgPSByYW5kb21JdGVtLmltYWdlO1xyXG5cclxuXHJcbiAgICBpbWcuY2xhc3NMaXN0LmFkZCgnaW1hZ2UnKTtcclxuICAgIC8vIG5ld0l0ZW0udGV4dENvbnRlbnQgPSByYW5kb21JdGVtLm5hbWU7XHJcblxyXG4gICAgY29uc3QgcmFyaXR5Q29sb3IgPSBnZXRSYXJpdHlDb2xvcihyYW5kb21JdGVtKTtcclxuXHJcbiAgICBuZXdJdGVtLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9ICdsaW5lYXItZ3JhZGllbnQod2hpdGUgNDAlLCAnXHJcbiAgICAgICAgICAgICsgcmFyaXR5Q29sb3IgKyAnKSc7XHJcbiAgICBsZXQgcmFyaXR5Qm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICByYXJpdHlCb3guY2xhc3NMaXN0LmFkZCgnaXRlbS1yYXJpdHktYm94Jyk7XHJcbiAgICByYXJpdHlCb3guc3R5bGUuYmFja2dyb3VuZENvbG9yID0gcmFyaXR5Q29sb3I7XHJcbiAgICBuZXdJdGVtLmFwcGVuZENoaWxkKGltZyk7XHJcbiAgICBuZXdJdGVtLmFwcGVuZENoaWxkKHJhcml0eUJveCk7XHJcbiAgICBpdGVtSG9sZGVyLmFwcGVuZENoaWxkKG5ld0l0ZW0pO1xyXG5cclxuICAgIGl0ZW1Ib2xkZXIuYXBwZW5kQ2hpbGQobmV3SXRlbSk7XHJcblxyXG4gIH1cclxuXHJcblxyXG4gIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IG9wZW5DYXNlKCkpO1xyXG4gIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGluc3RhbnRpYXRlTW9uZXlBbW91bnQoJ3JlZCcpKTtcclxuXHJcbiAgbmV3QnV0dG9uID0gYnV0dG9uLmNsb25lTm9kZSh0cnVlKTtcclxuXHJcbiAgbmV3QnV0dG9uLnN0eWxlLndpZHRoID0gJzUwJSc7XHJcbiAgbmV3QnV0dG9uLnRleHRDb250ZW50ID0gYE9wZW4gYW5vdGhlciAoLSR7a2V5UHJpY2V94oKsKWA7XHJcbiAgbmV3QnV0dG9uLnN0eWxlLndpZHRoID0gJzUwJSc7XHJcbiAgbmV3QnV0dG9uLnN0eWxlLmJvcmRlclJhZGl1cyA9ICcxMHB4JztcclxuXHJcblxyXG4gIG5ld0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IG9wZW5DYXNlKCkpO1xyXG4gIG5ld0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGluc3RhbnRpYXRlTW9uZXlBbW91bnQoJ3JlZCcpKTtcclxuXHJcblxyXG4gIGNhc2VTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gc2V0U2VsZWN0ZWRDYXNlKGNhc2VzW2Nhc2VTZWxlY3QudmFsdWVdKSk7XHJcblxyXG59XHJcblxyXG5cclxuYXN5bmMgZnVuY3Rpb24gb3BlbkNhc2UoKSB7XHJcblxyXG4gIGNsZWFyVXBXaW5kb3coKTtcclxuXHJcbiAgbW9uZXlTdGF0dXMgLT0ga2V5UHJpY2U7XHJcbiAgdXBkYXRlTW9uZXlTdGF0dXMoKTtcclxuICAvL2NsZWFyVXBXaW5kb3coKTtcclxuICBjb25zb2xlLmxvZyhjYXNlc1tjYXNlU2VsZWN0LnZhbHVlXSk7XHJcbiAgbGV0IGNhc2VJdGVtTGlzdCA9IHNlbGVjdGVkQ2FzZS5jb250YWlucztcclxuICBsZXQga25pdmVzID0gc2VsZWN0ZWRDYXNlLmNvbnRhaW5zX3JhcmU7XHJcblxyXG4gIC8vIEFkZGluZyBhIHJhbmRvbSBrbmlmZSBmcm9tIHRoZSBjYXNlIHRvIHRoZSB0YWJsZVxyXG5cclxuICBsZXQgcmFuZG9tS25pZmUgPSBrbml2ZXNbZ2V0UmFuZG9tSW50KDAsIDgpXTtcclxuXHJcbiAgcmFuZG9tS25pZmUub2RkcyA9IDAuMjY7XHJcblxyXG4gIGlmIChjYXNlSXRlbUxpc3QubGVuZ3RoIDwgZml4ZWRJdGVtQ291bnQpXHJcbiAgICBjYXNlSXRlbUxpc3QucHVzaChyYW5kb21LbmlmZSk7XHJcblxyXG4gIGNvbnNvbGUubG9nKGNhc2VJdGVtTGlzdCk7XHJcblxyXG4gIGRpc3RyaWJ1dGlvbiA9IGNyZWF0ZURpc3RyaWJ1dGlvbihjYXNlSXRlbUxpc3QsIDEwMCk7XHJcblxyXG4gIGxldCB0cmFuc2xhdGVYID0gZ2V0UmFuZG9tSW50KC01MDAwLCAtNjAwMCk7XHJcblxyXG4gIGNhc2VPcGVuV2luZG93LnN0eWxlLnNldFByb3BlcnR5KCctLXJhbmRvbS10cmFuc2xhdGVYYicsIGAke3RyYW5zbGF0ZVh9cHhgKTtcclxuICB0cmFuc2xhdGVYIC09IDM1MjsgLy8gcm9sbGVyIGlzIHBvc2l0aW9uZWQgMzUycHggZnJvbSB0aGUgc3RhcnRcclxuICBjb25zdCBpdGVtTnVtYmVyID0gTWF0aC5mbG9vcigodHJhbnNsYXRlWCAvIDE1MikgKiAoLTEpKTtcclxuICAvLyBjb25zb2xlLmxvZyhpdGVtTnVtYmVyKTtcclxuICBidXR0b24uY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZWQnKTtcclxuICBidXR0b24uY2xhc3NMaXN0LmFkZCgnYm91bmNlT3V0Jyk7XHJcbiAgYnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuXHJcbiAgaXRlbUhvbGRlci5pbm5lckhUTUwgPSAnJztcclxuICBjYXNlT3BlbldpbmRvdy5jbGFzc0xpc3QuYWRkKCdhbmltYXRlZCcpO1xyXG4gIGNhc2VPcGVuV2luZG93LmNsYXNzTGlzdC5hZGQoJ2ZsaXBJblgnKTtcclxuXHJcblxyXG4gIHNldFRpbWVvdXQoYXN5bmMgKCkgPT4ge1xyXG5cclxuICAgIGJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGVkJyk7XHJcbiAgICBidXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnYm91bmNlT3V0Jyk7XHJcblxyXG4gICAgY2FzZU9wZW5XaW5kb3cuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZWQnKTtcclxuICAgIGNhc2VPcGVuV2luZG93LmNsYXNzTGlzdC5yZW1vdmUoJ2ZsaXBJblgnKTtcclxuXHJcbiAgICBsZXQgaXRlbVdvbiA9IHJvbGxlZEl0ZW1zW2l0ZW1OdW1iZXJdO1xyXG5cclxuICAgIGxldCBvYnRhaW5lZEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIG9idGFpbmVkSXRlbS5jbGFzc0xpc3QuYWRkKCdvYnRhaW5lZEl0ZW0nKTtcclxuICAgIGxldCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcclxuXHJcbiAgICBpZiAoaXRlbVdvbi5pbWFnZSlcclxuICAgICAgaW1nLnNyYyA9IGl0ZW1Xb24uaW1hZ2U7XHJcbiAgICBlbHNlXHJcbiAgICAgIGltZy5zcmMgPSAnLi4vZGF0YS9pbWFnZXMveHJheS5wbmcnO1xyXG5cclxuICAgIGltZy5jbGFzc0xpc3QuYWRkKCdvYnRhaW5lZC1pbWFnZScpO1xyXG5cclxuICAgIG9idGFpbmVkSXRlbS5hcHBlbmRDaGlsZChpbWcpO1xyXG5cclxuICAgIGNvbnN0IHJhcml0eUNvbG9yID0gZ2V0UmFyaXR5Q29sb3IoaXRlbVdvbik7XHJcblxyXG4gICAgbGV0IHJhcml0eUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgcmFyaXR5Qm94LmNsYXNzTGlzdC5hZGQoJ29idGFpbmVkLWl0ZW0tcmFyaXR5LWJveCcpO1xyXG4gICAgcmFyaXR5Qm94LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHJhcml0eUNvbG9yO1xyXG5cclxuXHJcbiAgICBvYnRhaW5lZEl0ZW0uY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZWQnKTtcclxuICAgIG9idGFpbmVkSXRlbS5jbGFzc0xpc3QuYWRkKCdmYWRlSW4nKTtcclxuXHJcbiAgICBsZXQgaW5mbyA9IFtdO1xyXG5cclxuICAgIGNvbnN0IHRleHRQYXJ0cyA9IGl0ZW1Xb24ubmFtZS5zcGxpdCgnICcpO1xyXG4gICAgLy8gY29uc29sZS5sb2codGV4dFBhcnRzKTtcclxuXHJcbiAgICBsZXQgcHJpY2UgPSAnJztcclxuICAgIGxldCBzdGF0dHJhY2sgPSAnJztcclxuXHJcbiAgICAvLyBDYWxsIHRvIGJhY2tlbmRcclxuICAgIGF3YWl0IGNhbGxBcGkoYGRhdGEvcHJpY2U/JndlYXBvbj0ke2l0ZW1Xb24ud2VhcG9ufSZza2luPSR7aXRlbVdvbi5wYXR0ZXJufSZ3ZWFyPSR7aXRlbVdvbi53ZWFyc1swXX0maXRlbUlEPSR7aXRlbVdvbi5pZH1gKVxyXG4gICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICBsZXQgc2tpblByaWNlVGV4dCA9IGRhdGEubG93ZXN0X3ByaWNlO1xyXG4gICAgICAgICAgcHJpY2UgPSAnTWFya2V0IHByaWNlOiAnICsgc2tpblByaWNlVGV4dDtcclxuICAgICAgICAgIHNraW5QcmljZVRleHQgPSBza2luUHJpY2VUZXh0LnJlcGxhY2UoJywnLCAnLicpO1xyXG4gICAgICAgICAgY29uc3Qgd29ydGggPSBza2luUHJpY2VUZXh0LnNsaWNlKDAsIC0xKTtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKG1vbmV5U3RhdHVzKTtcclxuICAgICAgICAgIG1vbmV5U3RhdHVzICs9IHBhcnNlRmxvYXQod29ydGgpO1xyXG4gICAgICAgICAgY29uc29sZS5sb2cobW9uZXlTdGF0dXMpO1xyXG5cclxuICAgICAgICAgIGluc3RhbnRpYXRlTW9uZXlBbW91bnQoJ2dyZWVuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIHByaWNlID0gJ01hcmtldCBwcmljZSBub3QgYXZhaWxhYmxlJztcclxuICAgICAgfSk7XHJcblxyXG5cclxuICAgIGxldCBmbG9hdCA9ICdGbG9hdDogJyArIGdldFJhbmRvbUZsb2F0KGl0ZW1Xb24ubWluX2Zsb2F0LCBpdGVtV29uLm1heF9mbG9hdCk7XHJcblxyXG5cclxuICAgIGl0ZW1SYXJpdHlDb3VudHNbaXRlbVdvbi5yYXJpdHldKys7XHJcblxyXG4gICAgY29uc29sZS5sb2coaXRlbVJhcml0eUNvdW50cyk7XHJcblxyXG4gICAgaW5mby5wdXNoKHByaWNlKTtcclxuICAgIGluZm8ucHVzaChmbG9hdCk7XHJcblxyXG4gICAgbGV0IG9idGFpbmVkVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgb2J0YWluZWRUZXh0LnN0eWxlLm1hcmdpbiA9ICcxcmVtJztcclxuXHJcbiAgICBpbmZvLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgbGV0IHBhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgICAgcGFyLnRleHRDb250ZW50ID0gZWxlbWVudDtcclxuICAgICAgcGFyLnN0eWxlLmNvbG9yID0gJ3doaXRlJztcclxuICAgICAgb2J0YWluZWRUZXh0LmFwcGVuZENoaWxkKHBhcik7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvL2l0ZW1Xb24uc3R5bGUuc2V0UHJvcGVydHkoJ2JvcmRlcicsICczcHggc29saWQgeWVsbG93Jyk7XHJcbiAgICBvYnRhaW5lZEl0ZW0uYXBwZW5kQ2hpbGQob2J0YWluZWRUZXh0KTtcclxuXHJcbiAgICBvYnRhaW5lZEl0ZW0uYXBwZW5kQ2hpbGQobmV3QnV0dG9uKTtcclxuXHJcbiAgICBjYXNlT3BlbldpbmRvdy5hcHBlbmRDaGlsZChvYnRhaW5lZEl0ZW0pO1xyXG5cclxuICAgIHVwZGF0ZU1vbmV5U3RhdHVzKCk7XHJcblxyXG4gIH0sIDYwMDApO1xyXG5cclxuXHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcm9sbEl0ZW1Db3VudDsgaSsrKSB7XHJcblxyXG4gICAgbGV0IHJhbmRvbUl0ZW0gPSByYW5kb21HZW5JdGVtKGNhc2VJdGVtTGlzdCwgZGlzdHJpYnV0aW9uKTtcclxuICAgIHJvbGxlZEl0ZW1zLnB1c2gocmFuZG9tSXRlbSk7XHJcbiAgICBsZXQgbmV3SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbmV3SXRlbS5jbGFzc0xpc3QuYWRkKCdpdGVtJyk7XHJcbiAgICBuZXdJdGVtLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGVkSXRlbScpO1xyXG4gICAgbmV3SXRlbS5jbGFzc0xpc3QuYWRkKCdtb3ZlTGVmdCcpO1xyXG4gICAgbGV0IGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cclxuICAgIGlmIChyYW5kb21JdGVtLmltYWdlKSB7XHJcbiAgICAgIC8vIGV4Y2VlZGluZ2x5X3JhcmVfaXRlbS5wbmdcclxuICAgICAgaWYgKHJhbmRvbUl0ZW0uY2F0ZWdvcnkgPT09ICdLbml2ZXMnIHx8IHJhbmRvbUl0ZW0uY2F0ZWdvcnkgPT09ICdHbG92ZXMnKVxyXG4gICAgICAgIGltZy5zcmMgPSAnLi4vZGF0YS9pbWFnZXMvZXhjZWVkaW5nbHlfcmFyZV9pdGVtLnBuZyc7XHJcbiAgICAgIGVsc2VcclxuICAgICAgICBpbWcuc3JjID0gcmFuZG9tSXRlbS5pbWFnZTtcclxuICAgIH1cclxuICAgIGVsc2VcclxuICAgICAgaW1nLnNyYyA9ICcuLi9kYXRhL2ltYWdlcy94cmF5LnBuZyc7XHJcblxyXG4gICAgaW1nLmNsYXNzTGlzdC5hZGQoJ2ltYWdlJyk7XHJcbiAgICAvLyBuZXdJdGVtLnRleHRDb250ZW50ID0gcmFuZG9tSXRlbS5uYW1lO1xyXG5cclxuICAgIGNvbnN0IHJhcml0eUNvbG9yID0gZ2V0UmFyaXR5Q29sb3IocmFuZG9tSXRlbSk7XHJcblxyXG4gICAgbmV3SXRlbS5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAnbGluZWFyLWdyYWRpZW50KHdoaXRlIDQwJSwgJ1xyXG4gICAgICAgICAgICArIHJhcml0eUNvbG9yICsgJyknO1xyXG4gICAgbGV0IHJhcml0eUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgcmFyaXR5Qm94LmNsYXNzTGlzdC5hZGQoJ2l0ZW0tcmFyaXR5LWJveCcpO1xyXG4gICAgcmFyaXR5Qm94LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHJhcml0eUNvbG9yO1xyXG5cclxuICAgIG5ld0l0ZW0uYXBwZW5kQ2hpbGQoaW1nKTtcclxuICAgIG5ld0l0ZW0uYXBwZW5kQ2hpbGQocmFyaXR5Qm94KTtcclxuICAgIGl0ZW1Ib2xkZXIuYXBwZW5kQ2hpbGQobmV3SXRlbSk7XHJcblxyXG4gIH1cclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVwZGF0ZU1vbmV5U3RhdHVzKCkge1xyXG4gIHN0YXR1c1RleHQudGV4dENvbnRlbnQgPSAnU3RhdGU6ICcgKyBtb25leVN0YXR1cy50b0ZpeGVkKDIpICsgJ+KCrCc7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBjbGVhclVwV2luZG93KCkge1xyXG4gIGNhc2VPcGVuV2luZG93Lmxhc3RDaGlsZC5yZW1vdmUoKTtcclxuICByb2xsZWRJdGVtcyA9IFtdO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRSYXJpdHlDb2xvcihpdGVtKSB7XHJcblxyXG4gIGlmIChpdGVtLmNhdGVnb3J5ID09PSAnS25pdmVzJyB8fCBpdGVtLmNhdGVnb3J5ID09PSAnR2xvdmVzJylcclxuICAgIHJldHVybiAnI2ZmY2MwMCc7XHJcblxyXG4gIHN3aXRjaCAoaXRlbS5yYXJpdHkpIHtcclxuICBjYXNlICgnQ29uc3VtZXInKTpcclxuICAgIHJldHVybiAnI2FmYWZhZic7XHJcbiAgY2FzZSAoJ0luZHVzdHJpYWwnKTpcclxuICAgIHJldHVybiAnIzY0OTZlMSc7XHJcbiAgY2FzZSAoJ01pbC1TcGVjIEdyYWRlJyk6XHJcbiAgICByZXR1cm4gJyM0YjY5Y2QnO1xyXG4gIGNhc2UgKCdSZXN0cmljdGVkJyk6XHJcbiAgICByZXR1cm4gJyM4ODQ3ZmYnO1xyXG4gIGNhc2UgKCdDbGFzc2lmaWVkJyk6XHJcbiAgICByZXR1cm4gJyNkMzJjZTYnO1xyXG4gIGNhc2UgKCdDb3ZlcnQnKTpcclxuICAgIHJldHVybiAnI2ViNGI0Yic7XHJcbiAgY2FzZSAoJ0NvbnRyYWJhbmQnKTpcclxuICAgIHJldHVybiAnIzg4NmEwOCc7XHJcbiAgZGVmYXVsdDpcclxuICAgIHJldHVybiAnJztcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFJhcml0eU9kZHMoY3JhdGUpIHtcclxuICBjb25zdCBjYXNlUmFyaXR5Q291bnRzID0ge1xyXG4gICAgQ29uc3VtZXI6IDAsXHJcbiAgICBJbmR1c3RyaWFsOiAwLFxyXG4gICAgJ01pbC1TcGVjIEdyYWRlJzogMCxcclxuICAgIFJlc3RyaWN0ZWQ6IDAsXHJcbiAgICBDbGFzc2lmaWVkOiAwLFxyXG4gICAgQ292ZXJ0OiAwLFxyXG4gICAgQ29udHJhYmFuZDogMFxyXG4gIH07XHJcblxyXG4gIC8vIENvdW50IHRoZSByYXJpdGllcyBpbiB0aGUgc2VsZWN0ZWQgY2FzZVxyXG4gIGNyYXRlLmNvbnRhaW5zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgIGNhc2VSYXJpdHlDb3VudHNbaXRlbS5yYXJpdHldKys7XHJcbiAgfSk7XHJcblxyXG4gIC8vIFJldHVybiB0aGUgY291bnQgb2JqZWN0XHJcbiAgcmV0dXJuIGNhc2VSYXJpdHlDb3VudHM7XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBmdW5jdGlvbiBmb3IgdXBkYXRpbmcgdGhlIG1vbmV5IHRleHQgd2l0aCBhbnkgY29sb3JcclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcblxyXG5mdW5jdGlvbiBpbnN0YW50aWF0ZU1vbmV5QW1vdW50KGNvbG9yKSB7XHJcblxyXG4gIHN0YXR1c1RleHQuc3R5bGUuY29sb3IgPSBjb2xvcjtcclxuICBzdGF0dXNUZXh0LmNsYXNzTGlzdC5hZGQoJ2hpZ2hsaWdodC1hbW91bnQnKTtcclxuICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgIHN0YXR1c1RleHQuc3R5bGUuY29sb3IgPSAnYmxhY2snO1xyXG4gICAgc3RhdHVzVGV4dC5jbGFzc0xpc3QucmVtb3ZlKCdoaWdobGlnaHQtYW1vdW50Jyk7XHJcbiAgfSwgMTAwMCk7XHJcbn1cclxuXHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gTWF0aGVtYXRpY2FsIHV0aWxpdGllc1xyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbmZ1bmN0aW9uIGdldFJhbmRvbUludChtaW4sIG1heCkge1xyXG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRSYW5kb21GbG9hdChtaW4sIG1heCkge1xyXG4gIHJldHVybiAoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluKS50b0ZpeGVkKDQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByYW5kb21HZW5JdGVtKGFycmF5LCBkaXN0cmlidXRpb24pIHtcclxuICBjb25zdCBpbmRleCA9IHJhbmRvbUluZGV4KGRpc3RyaWJ1dGlvbik7XHJcbiAgcmV0dXJuIGFycmF5W2luZGV4XTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlRGlzdHJpYnV0aW9uKGl0ZW1zLCBzaXplKSB7XHJcbiAgY29uc3QgZGlzdHJpYnV0aW9uID0gW107XHJcbiAgY29uc3Qgd2VpZ2h0cyA9IGl0ZW1zLm1hcChpdGVtID0+IChpdGVtLm9kZHMgLyAoc2VsZWN0ZWRDYXNlLmNhc2VSYXJpdHlDb3VudHNbaXRlbS5yYXJpdHldIHx8IDEpIC8gMTAwKSk7XHJcbiAgY29uc29sZS5sb2cod2VpZ2h0cyk7XHJcblxyXG4gIGNvbnN0IHN1bSA9IHdlaWdodHMucmVkdWNlKChhY2N1bSwgY3VyclZhbCkgPT4gYWNjdW0gKyBjdXJyVmFsKTtcclxuICBjb25zb2xlLmxvZyhzdW0pO1xyXG4gIGNvbnN0IHF1YW50ID0gc2l6ZSAvIHN1bTtcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IHdlaWdodHMubGVuZ3RoOyArK2kpIHtcclxuICAgIGNvbnN0IGxpbWl0ID0gcXVhbnQgKiB3ZWlnaHRzW2ldO1xyXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBsaW1pdDsgKytqKSB7XHJcbiAgICAgIGRpc3RyaWJ1dGlvbi5wdXNoKGkpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gZGlzdHJpYnV0aW9uO1xyXG59XHJcblxyXG5mdW5jdGlvbiByYW5kb21JbmRleChkaXN0cmlidXRpb24pIHtcclxuICBjb25zdCBpbmRleCA9IE1hdGguZmxvb3IoZGlzdHJpYnV0aW9uLmxlbmd0aCAqIE1hdGgucmFuZG9tKCkpOyAvLyByYW5kb20gaW5kZXhcclxuICByZXR1cm4gZGlzdHJpYnV0aW9uW2luZGV4XTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2V0U2VsZWN0ZWRDYXNlKGNyYXRlKSB7XHJcbiAgc2VsZWN0ZWRDYXNlID0gY3JhdGU7XHJcbiAgZml4ZWRJdGVtQ291bnQgPSBjcmF0ZS5jb250YWlucy5sZW5ndGggKyAxO1xyXG4gIGNvbnNvbGUubG9nKCdJdGVtczogJyArIHNlbGVjdGVkQ2FzZS5jb250YWlucy5sZW5ndGgpO1xyXG4gIGlmICghc2VsZWN0ZWRDYXNlLmNhc2VSYXJpdHlDb3VudHMpIHtcclxuICAgIHNlbGVjdGVkQ2FzZS5jYXNlUmFyaXR5Q291bnRzID0gZ2V0UmFyaXR5T2RkcyhzZWxlY3RlZENhc2UpO1xyXG4gIH1cclxuXHJcbiAgbGV0IGNhc2VJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cclxuICBjYXNlSW1hZ2Uuc3JjID0gc2VsZWN0ZWRDYXNlLmltYWdlO1xyXG4gIGlmIChjYXNlSW1hZ2VTZWN0aW9uLmhhc0NoaWxkTm9kZXMoKSkge1xyXG4gICAgY2FzZUltYWdlU2VjdGlvbi5yZW1vdmVDaGlsZChjYXNlSW1hZ2VTZWN0aW9uLmxhc3RDaGlsZCk7XHJcbiAgICBjYXNlSW1hZ2VTZWN0aW9uLmFwcGVuZENoaWxkKGNhc2VJbWFnZSk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIEZ1bmN0aW9ucyBmb3IgZmV0Y2hpbmcgZGF0YSBmcm9tIHNlcnZlclxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGNhbGxBcGkodXJsUG9zdGZpeCkge1xyXG4gIGxldCB1cmwgPSBiYXNlVXJsICsgJy8nICsgdXJsUG9zdGZpeDtcclxuXHJcbiAgY29uc29sZS5sb2codXJsKTtcclxuICByZXR1cm4gZmV0Y2godXJsKVxyXG4gICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIFN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0pXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgIC8vIFJldHVybiBhbiBlcnJvciB2YWx1ZSBvciBoYW5kbGUgdGhlIGVycm9yIGFzIG5lZWRlZFxyXG4gICAgICByZXR1cm4gbnVsbDsgLy8gWW91IGNhbiBjaG9vc2UgYW4gYXBwcm9wcmlhdGUgZXJyb3IgdmFsdWUgaGVyZVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGZldGNoQ2FzZURhdGEoKSB7XHJcbiAgYXdhaXQgY2FsbEFwaSgnZGF0YS9jYXNlcycpXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgY2FzZXMgPSBkYXRhO1xyXG4gICAgICBjb25zb2xlLmxvZyhjYXNlcyk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;