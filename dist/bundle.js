(()=>{"use strict";var __webpack_modules__={435:()=>{eval("\n;// CONCATENATED MODULE: ./src/utilities/mathUtils.js\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction getRandomFloat(min, max) {\r\n  return (Math.random() * (max - min) + min).toFixed(4);\r\n}\r\n\r\nfunction randomGenItem(array, distribution) {\r\n  const index = randomIndex(distribution);\r\n  return array[index];\r\n}\r\n  \r\nfunction createDistribution(items, size, selectedCase) {\r\n  const distribution = [];\r\n  const weights = calculateItemWeights(items, selectedCase);\r\n  \r\n  const sum = weights.reduce((accum, currVal) => accum + currVal);\r\n  const quant = size / sum;\r\n  for (let i = 0; i < weights.length; ++i) {\r\n    const limit = quant * weights[i];\r\n    for (let j = 0; j < limit; ++j) {\r\n      distribution.push(i);\r\n    }\r\n  }\r\n  return distribution;\r\n}\r\n\r\nfunction calculateItemWeights(items, selectedCase) {\r\n  const weights = items.map(\r\n    item => (item.odds / (selectedCase.caseRarityCounts[item.rarity.name] || 1) / 100)\r\n  );\r\n  return weights;\r\n}\r\n  \r\nfunction randomIndex(distribution) {\r\n  const index = Math.floor(distribution.length * Math.random()); // random index\r\n  return distribution[index];\r\n}\r\n\r\n\r\n\r\n  \n;// CONCATENATED MODULE: ./src/utilities/crateUtils.js\n\r\n\r\nfunction getRarityOdds(crate) {\r\n  const rarityCounts = {\r\n    Consumer: 0,\r\n    Industrial: 0,\r\n    'Mil-Spec Grade': 0,\r\n    Restricted: 0,\r\n    Classified: 0,\r\n    Covert: 0,\r\n    Contraband: 0,\r\n    'High Grade': 0,\r\n    Remarkable: 0,\r\n    Exotic: 0,\r\n    Extraordinary: 0\r\n  };\r\n\r\n  crate.contains.forEach((item) => {\r\n    const rarityName = item.rarity.name;\r\n\r\n    if (rarityCounts.hasOwnProperty(rarityName)) {\r\n      rarityCounts[rarityName]++;\r\n    } else {\r\n      console.warn(`Unknown rarity: ${rarityName}`);\r\n    }\r\n  });\r\n\r\n  const filteredRarityCounts = Object.fromEntries(\r\n    Object.entries(rarityCounts).filter(([rarity, count]) => count > 0)\r\n  );\r\n\r\n  return filteredRarityCounts;\r\n}\r\n\r\nfunction getRarityColor(item) {\r\n\r\n  if(item.category) {\r\n    if (item.category.name === 'Knives' || item.category.name === 'Gloves')\r\n      return '#ffcc00'; \r\n  }\r\n  \r\n  switch (item.rarity.name) {\r\n    case 'Consumer Grade':\r\n      return '#afafaf';\r\n    case 'Industrial Grade':\r\n      return '#6496e1'; \r\n    case 'Mil-Spec Grade':\r\n      return '#4b69cd'; \r\n    case 'Restricted':\r\n      return '#8847ff'; \r\n    case 'Classified':\r\n      return '#d32ce6'; \r\n    case 'Covert':\r\n      return '#eb4b4b'; \r\n    case 'Contraband':\r\n      return '#886a08'; \r\n    \r\n    case 'High Grade':\r\n      return '#4b69cd'; \r\n    case 'Remarkable':\r\n      return '#8847ff'; \r\n    case 'Exotic':\r\n      return '#d32ce6'; \r\n    case 'Extraordinary':\r\n      return '#eb4b4b'; \r\n\r\n    default:\r\n      return ''; \r\n  }\r\n}\r\n\r\n\r\n\r\nfunction getRandomWear(item) {\r\n  if(item.wears) {\r\n    return item.wears[getRandomInt(0, item.wears.length-1)].name;\r\n  }\r\n  return '';\r\n}\r\n\r\n\r\n  \n;// CONCATENATED MODULE: ./src/report-section.js\n\r\n//// CAUTION RELATED TO CUSTOM VALIDATION \r\n// Mixing default html validation with custom provides difficult results\r\n// disable default html validations if possible\r\n\r\nconst reportButton = document.querySelector('.report-button');\r\nconst reportDialog = document.querySelector('#report-dialog');\r\nconst submitloadingIndicator = document.querySelector('#submitLoadingIndicator');\r\n\r\nlet nameInput = document.querySelector('#name');\r\nlet emailInput = document.querySelector('#e-mail');\r\nlet ideasInput = document.querySelector('#report');\r\nlet exitButton = document.querySelector('.exitButton');\r\nlet submitButton = document.querySelector('#submitButton');\r\nlet statusLabel = document.querySelector('#statusLabel');\r\n\r\nreportButton.addEventListener('click', () => {\r\n  // Show the dialog\r\n  reportDialog.classList.add('animated');\r\n  reportDialog.classList.add('fadeInReport');\r\n  reportDialog.showModal();\r\n  initializeInputs();\r\n  \r\n});\r\n\r\nexitButton.addEventListener('click', () => reportDialog.close());\r\n\r\nsubmitButton.addEventListener('click', handleSubmit);\r\n\r\nfunction initializeInputs() {\r\n  nameInput.addEventListener('input', nameVerification);\r\n  emailInput.addEventListener('input', emailVerification);\r\n  ideasInput.addEventListener('input', ideasVerification);\r\n}\r\n\r\nasync function handleSubmit(event) {\r\n\r\n  statusLabel.textContent = '';\r\n  event.preventDefault();\r\n\r\n  let isValid = true;\r\n\r\n  if (!nameVerification()) isValid = false;\r\n  if (!emailVerification()) isValid = false;\r\n  if (!ideasVerification()) isValid = false;\r\n\r\n  if (isValid) {\r\n    \r\n    const reportObj = {\r\n      name: nameInput.value,\r\n      email: emailInput.value,\r\n      text: ideasInput.value\r\n    };\r\n\r\n    let baseUrl = '';\r\n  \r\n    if(true) {\r\n      \r\n      //baseUrl = 'http:localhost:5500'; Local prod test\r\n      baseUrl = window.location.href;\r\n      baseUrl = baseUrl.slice(0, -1);\r\n    }\r\n    try {\r\n\r\n      enableIndicator();\r\n      disableButton();\r\n      \r\n      const response = await fetch(`${baseUrl}/send-email`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(reportObj)\r\n        \r\n      });\r\n\r\n      if (response.ok) {\r\n        statusLabel.textContent = 'Thank you for your feedback!';\r\n      } else {\r\n        statusLabel.textContent = 'Failed to send feedback';\r\n        enableButton();\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      statusLabel.textContent = `Error: ${error.message}`;\r\n      enableButton();\r\n      return;\r\n    }\r\n    finally {\r\n      disableIndicator();\r\n    }\r\n\r\n\r\n    setTimeout(()=>{\r\n      resetInputs();\r\n      reportDialog.close();\r\n    }, 1000);\r\n    \r\n  }\r\n}\r\n\r\n\r\nfunction nameVerification() {\r\n  if (nameInput.value.trim() === '') {\r\n    nameInput.setCustomValidity('Write your name');\r\n    nameInput.reportValidity();\r\n    return false;\r\n  }\r\n\r\n  nameInput.setCustomValidity('');\r\n  nameInput.reportValidity();\r\n\r\n  return true;\r\n}\r\n\r\nfunction emailVerification() {\r\n\r\n  // If chosen to write email - write it properly\r\n  if (emailInput.value.trim() === '') {\r\n    return true;\r\n  }\r\n  else if (emailInput.validity.typeMismatch) {\r\n    emailInput.setCustomValidity('Make sure to provide proper email');\r\n    emailInput.reportValidity();\r\n    return false;\r\n  } else {\r\n    emailInput.setCustomValidity('');\r\n  }\r\n\r\n  emailInput.reportValidity();\r\n  return true;\r\n}\r\n\r\nfunction ideasVerification() {\r\n  if (ideasInput.value.trim() === '') {\r\n    ideasInput.setCustomValidity('Say something, your feedback is important :)');\r\n    ideasInput.reportValidity();\r\n    return false;\r\n  }\r\n\r\n  else if (ideasInput.value.length < 15) {\r\n    ideasInput.setCustomValidity('Try to be as insightful as you can!');\r\n    ideasInput.reportValidity();\r\n    return false;\r\n  }\r\n  else {\r\n    ideasInput.setCustomValidity('');\r\n  }\r\n\r\n  ideasInput.reportValidity();\r\n  return true;\r\n}\r\n\r\nfunction resetInputs() {\r\n  nameInput.value = '';\r\n  emailInput.value = '';\r\n  ideasInput.value = '';\r\n  statusLabel.textContent = '';\r\n  enableButton();\r\n}\r\n\r\nfunction enableIndicator() {\r\n  submitloadingIndicator.style.display = 'block';\r\n}\r\nfunction disableIndicator() {\r\n  submitloadingIndicator.style.display = 'none';\r\n}\r\n\r\nfunction disableButton() {\r\n  submitButton.disabled = true;\r\n  submitButton.style.display = 'none';\r\n}\r\nfunction enableButton() {\r\n  submitButton.disabled = false;\r\n  submitButton.style.display = 'block';\r\n}\r\n\r\n\r\n/* harmony default export */ const report_section = ((/* unused pure expression or super */ null && (reportButton)));\n;// CONCATENATED MODULE: ./src/services/services.js\nasync function callApi(urlPostfix) {\r\n\r\n  // Change this for production build (it wont be using localhost)\r\n  let baseUrl = '';\r\n  \r\n  if(true) {\r\n    \r\n    //baseUrl = 'http:localhost:5500'; Local prod test\r\n    baseUrl = window.location.href;\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n  \r\n  let url = `${baseUrl}/${urlPostfix}`;\r\n  \r\n  return fetch(url)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      return null; \r\n    });\r\n}\r\n  \r\nasync function fetchCaseData() {\r\n  try {\r\n    const data = await callApi('data/cases');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching case data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchCapsuleData() {\r\n  try {\r\n    const data = await callApi('data/capsules');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching capsule data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchSouvenirData() {\r\n  try {\r\n    const data = await callApi('data/souvenirs');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching souvenir data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchAutographCapsuleData() {\r\n  try {\r\n    const data = await callApi('data/autograph_capsules');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching autograph capsule data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchGraffitiData() {\r\n  try {\r\n    const data = await callApi('data/graffitis');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching graffiti data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchPinData() {\r\n  try {\r\n    const data = await callApi('data/pins');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching pin data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/utilities/styleUtils.js\n\r\n\r\nfunction createLoadingIndicator() {\r\n  const loadingIndicator = document.createElement('div');\r\n  loadingIndicator.className = 'lds-ellipsis';\r\n  loadingIndicator.innerHTML = '<div></div><div></div><div></div><div></div>';\r\n  return loadingIndicator;\r\n}\r\n  \r\n// Utility function to hide the loading indicator and show the original content\r\nfunction showLoadingIndicatorInElement(element) {\r\n  const loadingIndicator = createLoadingIndicator();\r\n  loadingIndicator.id = 'loadingIndicator';\r\n  element.innerHTML = '';\r\n  element.appendChild(loadingIndicator);\r\n}\r\n  \r\n// Utility function to hide the loading indicator\r\nfunction hideLoadingIndicatorInElement(element, originalContent) {\r\n  element.innerHTML = originalContent;\r\n}\r\n\r\nfunction getBorderRadius() {\r\n  \r\n  const borderRadiusInstructions = [\r\n    '10px 20px 30px 40px',\r\n    '25% 10%',\r\n    '10% 20% 40% 20%;',\r\n    '10% / 50%',\r\n    '10px 100px / 120px',\r\n    '50% 20% / 10% 40%'\r\n  ];\r\n\r\n  return borderRadiusInstructions[getRandomInt(0, borderRadiusInstructions.length-1)];\r\n\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/index.js\n/////////////////////////////////\r\n// Dont use the word case in the code\r\n/////////////////////////////////\r\n\r\n\r\n\r\n // need to load report section, otherwise add in webpack entries\r\n\r\n\r\n\r\n\r\n\r\nlet statusText = document.querySelector('#status');\r\nlet moneyStatus = 4.35;\r\nconst keyPrice = 2.34;\r\n\r\nlet itemHolder = document.querySelector('.item-holder');\r\nconst caseOpenWindowHolder = document.querySelector('.case-open-window-holder');\r\nlet caseImageSection = document.querySelector('.case-image-section');\r\n\r\nconst caseLoadingIndicator = document.querySelector('#caseLoadingIndicator');\r\nconst interactionContainer = document.querySelector('.interaction-container');\r\n\r\nlet containerSelect = document.querySelector('#case');\r\n\r\nconst containerTypeSelect = document.querySelector('#container-type');\r\n\r\nconst src_button = document.querySelector('.open-button');\r\nlet reopenButton;\r\nlet backButton;\r\n\r\nlet containers = [];\r\nlet selectedCase = {};\r\nlet fixedItemCount = 18;\r\n\r\nconst rollItemCount = 150;\r\nlet rolledItems = [];\r\nlet distribution = [];\r\n\r\nconst itemRarityCounts = {\r\n  'Consumer Grade': 0,\r\n  'Industrial Grade': 0,\r\n  'Mil-Spec Grade': 0,\r\n  Restricted: 0,\r\n  Classified: 0,\r\n  Covert: 0,\r\n  Contraband: 0,\r\n  'High Grade': 0,\r\n  Remarkable: 0,\r\n  Exotic: 0,\r\n  Extraordinary: 0\r\n};\r\n\r\n\r\ninitializeContainerLoad();\r\n\r\nasync function initializeContainerLoad(containerType = 'cases') {\r\n  try {\r\n    \r\n    switch(containerType) {\r\n      case 'cases':\r\n        containers = await callApi('data/cases');\r\n        break;\r\n      case 'capsules':\r\n        containers = await callApi('data/capsules');\r\n        break;\r\n      case 'souvenirs':\r\n        containers = await callApi('data/souvenirs');\r\n        break;\r\n      case 'autograph_capsules':\r\n        containers = await callApi('data/autograph_capsules');\r\n        break;\r\n      case 'graffitis':\r\n        containers = await callApi('data/graffitis');\r\n        break;\r\n      case 'pins':\r\n        containers = await callApi('data/pins');\r\n        break;\r\n      default:\r\n        containers = [];\r\n        break;\r\n    }\r\n\r\n    containerSelect.innerHTML = '';\r\n\r\n    containers.map((container, index) => {\r\n      let option = document.createElement('option');\r\n      option.value = index;\r\n      option.textContent = container.price ? `${container.name} (${container.price}$)` : container.name;\r\n      containerSelect.appendChild(option);\r\n    });\r\n\r\n    setSelectedContainer(containers[containerSelect.value]);\r\n    caseOpenWindowHolder.disabled = true;\r\n\r\n    displayInitialItems();\r\n    initializeEventListeners();\r\n  } catch (error) {\r\n    console.error('Error loading containers:', error);\r\n    interactionContainer.innerHTML = 'There was a problem loading containers, refresh the page or try again later.';\r\n  } finally {\r\n    caseLoadingIndicator.style.display = 'none';\r\n    interactionContainer.style.display = 'flex';\r\n  }\r\n}\r\n\r\nfunction handleOpenButtonClick() {\r\n  openCase();\r\n  instantiateMoneyAmount('red');\r\n}\r\n\r\nfunction handleBackButtonClick() {\r\n  const lastChild = caseOpenWindowHolder.lastChild;\r\n  if (lastChild && lastChild.classList.contains('obtainedItem')) {\r\n    caseOpenWindowHolder.removeChild(lastChild);\r\n  }\r\n}\r\n\r\nfunction initializeEventListeners() {\r\n  src_button.addEventListener('click', handleOpenButtonClick);\r\n\r\n  reopenButton = src_button.cloneNode(true);\r\n\r\n  reopenButton.textContent = `Open another (-${keyPrice}$)`;\r\n  reopenButton.style.color = 'white';\r\n\r\n  reopenButton.addEventListener('click', handleOpenButtonClick);\r\n\r\n  backButton = src_button.cloneNode(true);\r\n\r\n  backButton.textContent = 'Back';\r\n  backButton.style.color = 'white';\r\n\r\n  backButton.addEventListener('click', handleBackButtonClick);\r\n\r\n  containerSelect.addEventListener('change', () => setSelectedContainer(containers[containerSelect.value]));\r\n\r\n  containerTypeSelect.addEventListener('change', () => {\r\n    const selectedType = containerTypeSelect.value;\r\n    initializeContainerLoad(selectedType); // Load containers based on selected type\r\n  });\r\n\r\n}\r\n\r\n\r\n\r\nfunction displayInitialItems() {\r\n\r\n  const caseItemsList = [...selectedCase.contains];\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    let randomItem = caseItemsList[getRandomInt(0, caseItemsList.length - 1)];\r\n\r\n    let newItem = createItemElement(randomItem);\r\n    \r\n    itemHolder.appendChild(newItem);\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction createItemElement(item) {\r\n  const newItem = document.createElement('div');\r\n  newItem.classList.add('item');\r\n\r\n  const img = document.createElement('img');\r\n  if (item.image) {\r\n    if(item.category) {\r\n      if (item.category.name === 'Knives' || item.category.name === 'Gloves')\r\n        img.classList.add('exceedinglyRare');\r\n        // webpack fix\r\n    }\r\n\r\n    img.src = item.image;\r\n  }\r\n  else\r\n    img.src = './assets/images/xray.png';\r\n\r\n  img.classList.add('image');\r\n\r\n  const rarityColor = getRarityColor(item);\r\n\r\n  newItem.style.backgroundImage = `linear-gradient(white 40%, ${rarityColor})`;\r\n\r\n  const rarityBox = document.createElement('div');\r\n  rarityBox.classList.add('item-rarity-box');\r\n  rarityBox.style.backgroundColor = rarityColor;\r\n\r\n  newItem.appendChild(img);\r\n  newItem.appendChild(rarityBox);\r\n\r\n  return newItem;\r\n}\r\n\r\nfunction initiateRollingProcess() {\r\n  return new Promise((resolve) => {\r\n    let translateX = getRandomInt(-5000, -6000);\r\n    caseOpenWindowHolder.style.setProperty('--random-translateXb', `${translateX}px`);\r\n    translateX -= caseOpenWindowHolder.offsetWidth / 2; // position of marker\r\n    const itemNumber = Math.floor((translateX / 150) * -1);\r\n\r\n    src_button.classList.add('animated', 'bounceOut');\r\n    src_button.disabled = true;\r\n\r\n    caseOpenWindowHolder.classList.add('animated', 'flipInX');\r\n\r\n    setTimeout(() => {\r\n      src_button.disabled = false;\r\n      src_button.classList.remove('animated', 'bounceOut');\r\n      caseOpenWindowHolder.classList.remove('animated', 'flipInX');\r\n      resolve(itemNumber);\r\n    }, 6000);\r\n  });\r\n  \r\n}\r\n\r\nasync function determineItemWon(items) {\r\n  for (let i = 0; i < rollItemCount; i++) {\r\n    const randomItem = randomGenItem(items, distribution);\r\n    rolledItems.push(randomItem);\r\n    const newItem = createItemElement(randomItem);\r\n    newItem.classList.add('animatedItem', 'moveLeft');\r\n    itemHolder.appendChild(newItem);\r\n  }\r\n\r\n  const itemNumber = await initiateRollingProcess();\r\n\r\n  return rolledItems[itemNumber];\r\n}\r\n\r\nasync function getItemInfo(itemWon, itemWear) {\r\n  let price;\r\n  try {\r\n    const category = itemWon.category ? itemWon.category.name : '';\r\n    const data = await callApi(`data/price?&caseType=${selectedCase.type}&item=${itemWon.name}&&wear=${itemWear || ''}&itemID=${itemWon.id}&category=${category}`);\r\n    price = data.lowest_price;\r\n    const worth = parseFloat(price.slice(1));\r\n    moneyStatus += worth;\r\n    instantiateMoneyAmount('green');\r\n    updateMoneyStatus();\r\n  } catch (error) {\r\n    console.error('Error fetching item price:', error);\r\n    price = 'Market price not available';\r\n  }\r\n  let itemInfo = { name: itemWon.name, rarity: itemWon.rarity.name, price};\r\n\r\n  const minFloat = itemWon.min_float; \r\n  const maxFloat = itemWon.max_float; \r\n  \r\n  const float = (minFloat !== undefined && maxFloat !== undefined) \r\n      ? getRandomFloat(minFloat, maxFloat) \r\n      : undefined; \r\n\r\n  itemRarityCounts[itemWon.rarity]++;\r\n\r\n  if (float)\r\n    itemInfo.float = float;\r\n  \r\n  if (itemWear)\r\n    itemInfo.wear = itemWear;\r\n\r\n  return itemInfo;\r\n}\r\n\r\n\r\nasync function displayWonItem(itemWon) {\r\n  const obtainedItem = document.createElement('div');\r\n  obtainedItem.classList.add('obtainedItem');\r\n\r\n  const img = document.createElement('img');\r\n  img.src = itemWon.image || './assets/images/xray.png';\r\n  img.classList.add('obtained-image');\r\n  obtainedItem.appendChild(img);\r\n\r\n  const rarityColor = getRarityColor(itemWon);\r\n  const rarityBox = document.createElement('div');\r\n  rarityBox.classList.add('obtained-item-rarity-box');\r\n  rarityBox.style.backgroundColor = rarityColor;\r\n\r\n  obtainedItem.classList.add('animated', 'fadeIn');\r\n\r\n  const itemWear = getRandomWear(itemWon);\r\n  const itemInfo = await getItemInfo(itemWon, itemWear);\r\n\r\n  const obtainedText = document.createElement('div');\r\n  obtainedText.classList.add('obtainedItemInfo');\r\n  for (const [key, value] of Object.entries(itemInfo)) {\r\n    const par = document.createElement('p');\r\n    par.textContent = `${key.toUpperCase()}: ${value}`;\r\n    if (key === 'rarity') par.style.textShadow = `4px 2px 4px ${rarityColor}`;\r\n    obtainedText.appendChild(par);\r\n  }\r\n\r\n  const bottomSection = document.createElement('div');\r\n  bottomSection.classList.add('bottomSection');\r\n  bottomSection.appendChild(obtainedText);\r\n\r\n  const buttonSection = document.createElement('div');\r\n  buttonSection.classList.add('buttonSection');\r\n  buttonSection.appendChild(reopenButton);\r\n  buttonSection.appendChild(backButton);\r\n\r\n  bottomSection.appendChild(buttonSection);\r\n  obtainedItem.appendChild(bottomSection);\r\n  caseOpenWindowHolder.appendChild(obtainedItem);\r\n\r\n  setTimeout(() => {\r\n    obtainedItem.style.borderRadius = getBorderRadius();\r\n    obtainedItem.style.borderColor = rarityColor;\r\n  }, 500);\r\n}\r\n\r\nasync function openCase() {\r\n  try {\r\n    clearUpWindow();\r\n\r\n    let casePrice = 0;\r\n    if(selectedCase.price) {\r\n      casePrice = parseFloat(selectedCase.price);\r\n    }\r\n    \r\n    moneyStatus -= keyPrice + casePrice;\r\n    updateMoneyStatus();\r\n\r\n    const caseItemList = [...selectedCase.contains];\r\n    if(selectedCase.contains_rare.length > 0) {\r\n      const knives = [...selectedCase.contains_rare];\r\n      let randomKnife = {...knives[getRandomInt(0, 8)], odds: 0.26};\r\n  \r\n      if (caseItemList.length < fixedItemCount) \r\n        caseItemList.push(randomKnife);\r\n    }\r\n    \r\n\r\n    distribution = createDistribution(caseItemList, 100, selectedCase);\r\n\r\n    const itemWon = await determineItemWon(caseItemList);\r\n    await displayWonItem(itemWon);\r\n  } catch (error) {\r\n    console.error('Error opening case:', error);\r\n  }\r\n}\r\n\r\nfunction updateMoneyStatus() {\r\n  statusText.textContent = 'State: ' + moneyStatus.toFixed(2) + '$';\r\n}\r\n\r\n\r\nfunction clearUpWindow() {\r\n  itemHolder.innerHTML = '';\r\n  const obtainedItem = document.querySelector('.obtainedItem');\r\n  if (obtainedItem && obtainedItem.classList.contains('obtainedItem')) {\r\n    caseOpenWindowHolder.removeChild(obtainedItem);\r\n  }\r\n  rolledItems = [];\r\n}\r\n\r\n\r\nfunction instantiateMoneyAmount(color) {\r\n\r\n  statusText.style.color = color;\r\n  statusText.classList.add('highlight-amount');\r\n  setTimeout(() => {\r\n    statusText.style.color = 'black';\r\n    statusText.classList.remove('highlight-amount');\r\n  }, 1000);\r\n}\r\n\r\n\r\nfunction setSelectedContainer(container) {\r\n  selectedCase = {...container};\r\n  fixedItemCount = container.contains.length + 1;\r\n  if (!selectedCase.caseRarityCounts) {\r\n    selectedCase.caseRarityCounts = getRarityOdds(selectedCase);\r\n  }\r\n\r\n  let caseImage = document.createElement('img');\r\n  const caseImageSource = selectedCase.image;\r\n  caseImage.src = caseImageSource;\r\n\r\n  caseImageSection.innerHTML = '';\r\n  caseImageSection.appendChild(caseImage);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///435\n")}},__webpack_exports__={};__webpack_modules__[435]()})();