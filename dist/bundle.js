(()=>{"use strict";var __webpack_modules__={435:()=>{eval("\n;// CONCATENATED MODULE: ./src/utilities/mathUtils.js\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction getRandomFloat(min, max) {\r\n  return (Math.random() * (max - min) + min).toFixed(4);\r\n}\r\n\r\nfunction randomGenItem(array, distribution) {\r\n  const index = randomIndex(distribution);\r\n  return array[index];\r\n}\r\n  \r\nfunction createDistribution(items, size, selectedCase) {\r\n  const distribution = [];\r\n  const weights = calculateItemWeights(items, selectedCase);\r\n  \r\n  const sum = weights.reduce((accum, currVal) => accum + currVal);\r\n  const quant = size / sum;\r\n  for (let i = 0; i < weights.length; ++i) {\r\n    const limit = quant * weights[i];\r\n    for (let j = 0; j < limit; ++j) {\r\n      distribution.push(i);\r\n    }\r\n  }\r\n  return distribution;\r\n}\r\n\r\nfunction calculateItemWeights(items, selectedCase) {\r\n  const weights = items.map(\r\n    item => (item.odds / (selectedCase.caseRarityCounts[item.rarity.name] || 1) / 100)\r\n  );\r\n  return weights;\r\n}\r\n  \r\nfunction randomIndex(distribution) {\r\n  const index = Math.floor(distribution.length * Math.random()); // random index\r\n  return distribution[index];\r\n}\r\n\r\n\r\n\r\n  \n;// CONCATENATED MODULE: ./src/utilities/crateUtils.js\n\r\n\r\nfunction getRarityOdds(crate) {\r\n  const rarityCounts = {\r\n    Consumer: 0,\r\n    Industrial: 0,\r\n    'Mil-Spec Grade': 0,\r\n    Restricted: 0,\r\n    Classified: 0,\r\n    Covert: 0,\r\n    Contraband: 0,\r\n    'High Grade': 0,\r\n    Remarkable: 0,\r\n    Exotic: 0,\r\n    Extraordinary: 0\r\n  };\r\n\r\n  crate.contains.forEach((item) => {\r\n    const rarityName = item.rarity.name;\r\n\r\n    if (rarityCounts.hasOwnProperty(rarityName)) {\r\n      rarityCounts[rarityName]++;\r\n    } else {\r\n      console.warn(`Unknown rarity: ${rarityName}`);\r\n    }\r\n  });\r\n\r\n  const filteredRarityCounts = Object.fromEntries(\r\n    Object.entries(rarityCounts).filter(([rarity, count]) => count > 0)\r\n  );\r\n\r\n  return filteredRarityCounts;\r\n}\r\n\r\nfunction getRarityColor(item) {\r\n\r\n  if(item.category) {\r\n    if (item.category.name === 'Knives' || item.category.name === 'Gloves')\r\n      return '#ffcc00'; \r\n  }\r\n  \r\n  switch (item.rarity.name) {\r\n    case 'Consumer Grade':\r\n      return '#afafaf';\r\n    case 'Industrial Grade':\r\n      return '#6496e1'; \r\n    case 'Mil-Spec Grade':\r\n      return '#4b69cd'; \r\n    case 'Restricted':\r\n      return '#8847ff'; \r\n    case 'Classified':\r\n      return '#d32ce6'; \r\n    case 'Covert':\r\n      return '#eb4b4b'; \r\n    case 'Contraband':\r\n      return '#886a08'; \r\n    \r\n    case 'High Grade':\r\n      return '#4b69cd'; \r\n    case 'Remarkable':\r\n      return '#8847ff'; \r\n    case 'Exotic':\r\n      return '#d32ce6'; \r\n    case 'Extraordinary':\r\n      return '#eb4b4b'; \r\n\r\n    default:\r\n      return ''; \r\n  }\r\n}\r\n\r\n\r\n\r\nfunction getRandomWear(item) {\r\n  if(item.wears) {\r\n    return item.wears[getRandomInt(0, item.wears.length-1)].name;\r\n  }\r\n  return '';\r\n}\r\n\r\n\r\n  \n;// CONCATENATED MODULE: ./src/report-section.js\n\r\n//// CAUTION RELATED TO CUSTOM VALIDATION \r\n// Mixing default html validation with custom provides difficult results\r\n// disable default html validations if possible\r\n\r\nconst reportButton = document.querySelector('.report-button');\r\nconst reportDialog = document.querySelector('#report-dialog');\r\nconst submitloadingIndicator = document.querySelector('#submitLoadingIndicator');\r\n\r\nlet nameInput = document.querySelector('#name');\r\nlet emailInput = document.querySelector('#e-mail');\r\nlet ideasInput = document.querySelector('#report');\r\nlet exitButton = document.querySelector('.exitButton');\r\nlet submitButton = document.querySelector('#submitButton');\r\nlet statusLabel = document.querySelector('#statusLabel');\r\n\r\nreportButton.addEventListener('click', () => {\r\n  // Show the dialog\r\n  reportDialog.classList.add('animated');\r\n  reportDialog.classList.add('fadeInReport');\r\n  reportDialog.showModal();\r\n  initializeInputs();\r\n  \r\n});\r\n\r\nexitButton.addEventListener('click', () => reportDialog.close());\r\n\r\nsubmitButton.addEventListener('click', handleSubmit);\r\n\r\nfunction initializeInputs() {\r\n  nameInput.addEventListener('input', nameVerification);\r\n  emailInput.addEventListener('input', emailVerification);\r\n  ideasInput.addEventListener('input', ideasVerification);\r\n}\r\n\r\nasync function handleSubmit(event) {\r\n\r\n  statusLabel.textContent = '';\r\n  event.preventDefault();\r\n\r\n  let isValid = true;\r\n\r\n  if (!nameVerification()) isValid = false;\r\n  if (!emailVerification()) isValid = false;\r\n  if (!ideasVerification()) isValid = false;\r\n\r\n  if (isValid) {\r\n    \r\n    const reportObj = {\r\n      name: nameInput.value,\r\n      email: emailInput.value,\r\n      text: ideasInput.value\r\n    };\r\n\r\n    let baseUrl = '';\r\n  \r\n    if(true) {\r\n      \r\n      //baseUrl = 'http:localhost:5500'; Local prod test\r\n      baseUrl = window.location.href;\r\n      baseUrl = baseUrl.slice(0, -1);\r\n    }\r\n    try {\r\n\r\n      enableIndicator();\r\n      disableButton();\r\n      \r\n      const response = await fetch(`${baseUrl}/send-email`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(reportObj)\r\n        \r\n      });\r\n\r\n      if (response.ok) {\r\n        statusLabel.textContent = 'Thank you for your feedback!';\r\n      } else {\r\n        statusLabel.textContent = 'Failed to send feedback';\r\n        enableButton();\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      statusLabel.textContent = `Error: ${error.message}`;\r\n      enableButton();\r\n      return;\r\n    }\r\n    finally {\r\n      disableIndicator();\r\n    }\r\n\r\n\r\n    setTimeout(()=>{\r\n      resetInputs();\r\n      reportDialog.close();\r\n    }, 1000);\r\n    \r\n  }\r\n}\r\n\r\n\r\nfunction nameVerification() {\r\n  if (nameInput.value.trim() === '') {\r\n    nameInput.setCustomValidity('Write your name');\r\n    nameInput.reportValidity();\r\n    return false;\r\n  }\r\n\r\n  nameInput.setCustomValidity('');\r\n  nameInput.reportValidity();\r\n\r\n  return true;\r\n}\r\n\r\nfunction emailVerification() {\r\n\r\n  // If chosen to write email - write it properly\r\n  if (emailInput.value.trim() === '') {\r\n    return true;\r\n  }\r\n  else if (emailInput.validity.typeMismatch) {\r\n    emailInput.setCustomValidity('Make sure to provide proper email');\r\n    emailInput.reportValidity();\r\n    return false;\r\n  } else {\r\n    emailInput.setCustomValidity('');\r\n  }\r\n\r\n  emailInput.reportValidity();\r\n  return true;\r\n}\r\n\r\nfunction ideasVerification() {\r\n  if (ideasInput.value.trim() === '') {\r\n    ideasInput.setCustomValidity('Say something, your feedback is important :)');\r\n    ideasInput.reportValidity();\r\n    return false;\r\n  }\r\n\r\n  else if (ideasInput.value.length < 15) {\r\n    ideasInput.setCustomValidity('Try to be as insightful as you can!');\r\n    ideasInput.reportValidity();\r\n    return false;\r\n  }\r\n  else {\r\n    ideasInput.setCustomValidity('');\r\n  }\r\n\r\n  ideasInput.reportValidity();\r\n  return true;\r\n}\r\n\r\nfunction resetInputs() {\r\n  nameInput.value = '';\r\n  emailInput.value = '';\r\n  ideasInput.value = '';\r\n  statusLabel.textContent = '';\r\n  enableButton();\r\n}\r\n\r\nfunction enableIndicator() {\r\n  submitloadingIndicator.style.display = 'block';\r\n}\r\nfunction disableIndicator() {\r\n  submitloadingIndicator.style.display = 'none';\r\n}\r\n\r\nfunction disableButton() {\r\n  submitButton.disabled = true;\r\n  submitButton.style.display = 'none';\r\n}\r\nfunction enableButton() {\r\n  submitButton.disabled = false;\r\n  submitButton.style.display = 'block';\r\n}\r\n\r\n\r\n/* harmony default export */ const report_section = ((/* unused pure expression or super */ null && (reportButton)));\n;// CONCATENATED MODULE: ./src/services/services.js\nasync function callApi(urlPostfix) {\r\n\r\n  // Change this for production build (it wont be using localhost)\r\n  let baseUrl = '';\r\n  \r\n  if(true) {\r\n    \r\n    //baseUrl = 'http:localhost:5500'; Local prod test\r\n    baseUrl = window.location.href;\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n  \r\n  let url = `${baseUrl}/${urlPostfix}`;\r\n  \r\n  return fetch(url)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      return null; \r\n    });\r\n}\r\n  \r\nasync function fetchCaseData() {\r\n  try {\r\n    const data = await callApi('data/cases');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching case data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchCapsuleData() {\r\n  try {\r\n    const data = await callApi('data/capsules');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching capsule data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchSouvenirData() {\r\n  try {\r\n    const data = await callApi('data/souvenirs');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching souvenir data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchAutographCapsuleData() {\r\n  try {\r\n    const data = await callApi('data/autograph_capsules');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching autograph capsule data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchGraffitiData() {\r\n  try {\r\n    const data = await callApi('data/graffitis');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching graffiti data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function fetchPinData() {\r\n  try {\r\n    const data = await callApi('data/pins');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching pin data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/utilities/styleUtils.js\n\r\n\r\nfunction createLoadingIndicator() {\r\n  const loadingIndicator = document.createElement('div');\r\n  loadingIndicator.className = 'lds-ellipsis';\r\n  loadingIndicator.innerHTML = '<div></div><div></div><div></div><div></div>';\r\n  return loadingIndicator;\r\n}\r\n  \r\n// Utility function to hide the loading indicator and show the original content\r\nfunction showLoadingIndicatorInElement(element) {\r\n  const loadingIndicator = createLoadingIndicator();\r\n  loadingIndicator.id = 'loadingIndicator';\r\n  element.innerHTML = '';\r\n  element.appendChild(loadingIndicator);\r\n}\r\n  \r\n// Utility function to hide the loading indicator\r\nfunction hideLoadingIndicatorInElement(element, originalContent) {\r\n  element.innerHTML = originalContent;\r\n}\r\n\r\nfunction getBorderRadius() {\r\n  \r\n  const borderRadiusInstructions = [\r\n    '10px 20px 30px 40px',\r\n    '25% 10%',\r\n    '10% 20% 40% 20%;',\r\n    '10% / 50%',\r\n    '10px 100px / 120px',\r\n    '50% 20% / 10% 40%'\r\n  ];\r\n\r\n  return borderRadiusInstructions[getRandomInt(0, borderRadiusInstructions.length-1)];\r\n\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/index.js\n/////////////////////////////////\r\n// Dont use the word case in the code\r\n/////////////////////////////////\r\n\r\n\r\n\r\n // need to load report section, otherwise add in webpack entries\r\n\r\n\r\n\r\n\r\n\r\nlet statusText = document.querySelector('#status');\r\nlet moneyStatus = 4.35;\r\nconst keyPrice = 2.34;\r\n\r\nlet itemHolder = document.querySelector('.item-holder');\r\nconst caseOpenWindowHolder = document.querySelector('.case-open-window-holder');\r\nlet caseImageSection = document.querySelector('.case-image-section');\r\n\r\nconst caseLoadingIndicator = document.querySelector('#caseLoadingIndicator');\r\nconst interactionContainer = document.querySelector('.interaction-container');\r\n\r\nlet containerSelect = document.querySelector('#case');\r\n\r\nconst containerTypeSelect = document.querySelector('#container-type');\r\n\r\nconst src_button = document.querySelector('.open-button');\r\nlet reopenButton;\r\nlet backButton;\r\n\r\nlet containers = [];\r\nlet selectedCase = {};\r\nlet fixedItemCount = 18;\r\n\r\nconst rollItemCount = 150;\r\nlet rolledItems = [];\r\nlet distribution = [];\r\n\r\nconst itemRarityCounts = {\r\n  'Consumer Grade': 0,\r\n  'Industrial Grade': 0,\r\n  'Mil-Spec Grade': 0,\r\n  Restricted: 0,\r\n  Classified: 0,\r\n  Covert: 0,\r\n  Contraband: 0,\r\n  'High Grade': 0,\r\n  Remarkable: 0,\r\n  Exotic: 0,\r\n  Extraordinary: 0\r\n};\r\n\r\n\r\ninitializeContainerLoad();\r\n\r\nasync function initializeContainerLoad(containerType = 'cases') {\r\n  try {\r\n    \r\n    switch(containerType) {\r\n      case 'cases':\r\n        containers = await callApi('data/cases');\r\n        break;\r\n      case 'capsules':\r\n        containers = await callApi('data/capsules');\r\n        break;\r\n      case 'souvenirs':\r\n        containers = await callApi('data/souvenirs');\r\n        break;\r\n      case 'autograph_capsules':\r\n        containers = await callApi('data/autograph_capsules');\r\n        break;\r\n      case 'graffitis':\r\n        containers = await callApi('data/graffitis');\r\n        break;\r\n      case 'pins':\r\n        containers = await callApi('data/pins');\r\n        break;\r\n      default:\r\n        containers = [];\r\n        break;\r\n    }\r\n\r\n    containerSelect.innerHTML = '';\r\n\r\n    containers.map((container, index) => {\r\n      let option = document.createElement('option');\r\n      option.value = index;\r\n      option.textContent = container.price ? `${container.name} (${container.price}$)` : container.name;\r\n      containerSelect.appendChild(option);\r\n    });\r\n\r\n    setSelectedContainer(containers[containerSelect.value]);\r\n    caseOpenWindowHolder.disabled = true;\r\n\r\n    displayInitialItems();\r\n    initializeEventListeners();\r\n  } catch (error) {\r\n    console.error('Error loading containers:', error);\r\n    interactionContainer.innerHTML = 'There was a problem loading containers, refresh the page or try again later.';\r\n  } finally {\r\n    caseLoadingIndicator.style.display = 'none';\r\n    interactionContainer.style.display = 'flex';\r\n  }\r\n}\r\n\r\nfunction handleOpenButtonClick() {\r\n  openCase();\r\n  instantiateMoneyAmount('red');\r\n}\r\n\r\nfunction handleBackButtonClick() {\r\n  const lastChild = caseOpenWindowHolder.lastChild;\r\n  if (lastChild && lastChild.classList.contains('obtainedItem')) {\r\n    caseOpenWindowHolder.removeChild(lastChild);\r\n  }\r\n}\r\n\r\nfunction initializeEventListeners() {\r\n  src_button.addEventListener('click', handleOpenButtonClick);\r\n\r\n  reopenButton = src_button.cloneNode(true);\r\n\r\n  reopenButton.textContent = `Open another (-${keyPrice}$)`;\r\n  reopenButton.style.color = 'white';\r\n\r\n  reopenButton.addEventListener('click', handleOpenButtonClick);\r\n\r\n  backButton = src_button.cloneNode(true);\r\n\r\n  backButton.textContent = 'Back';\r\n  backButton.style.color = 'white';\r\n\r\n  backButton.addEventListener('click', handleBackButtonClick);\r\n\r\n  containerSelect.addEventListener('change', () => setSelectedContainer(containers[containerSelect.value]));\r\n\r\n  containerTypeSelect.addEventListener('change', () => {\r\n    const selectedType = containerTypeSelect.value;\r\n    initializeContainerLoad(selectedType); // Load containers based on selected type\r\n  });\r\n\r\n}\r\n\r\n\r\n\r\nfunction displayInitialItems() {\r\n\r\n  const caseItemsList = [...selectedCase.contains];\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    let randomItem = caseItemsList[getRandomInt(0, caseItemsList.length - 1)];\r\n\r\n    let newItem = createItemElement(randomItem);\r\n    \r\n    itemHolder.appendChild(newItem);\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction createItemElement(item) {\r\n  const newItem = document.createElement('div');\r\n  newItem.classList.add('item');\r\n\r\n  const img = document.createElement('img');\r\n  if (item.image) {\r\n    if(item.category) {\r\n      if (item.category.name === 'Knives' || item.category.name === 'Gloves')\r\n        img.classList.add('exceedinglyRare');\r\n        // webpack fix\r\n    }\r\n\r\n    img.src = item.image;\r\n  }\r\n  else\r\n    img.src = './assets/images/xray.png';\r\n\r\n  img.classList.add('image');\r\n\r\n  const rarityColor = getRarityColor(item);\r\n\r\n  newItem.style.backgroundImage = `linear-gradient(white 40%, ${rarityColor})`;\r\n\r\n  const rarityBox = document.createElement('div');\r\n  rarityBox.classList.add('item-rarity-box');\r\n  rarityBox.style.backgroundColor = rarityColor;\r\n\r\n  newItem.appendChild(img);\r\n  newItem.appendChild(rarityBox);\r\n\r\n  return newItem;\r\n}\r\n\r\nfunction initiateRollingProcess() {\r\n  return new Promise((resolve) => {\r\n    let translateX = getRandomInt(-5000, -6000);\r\n    caseOpenWindowHolder.style.setProperty('--random-translateXb', `${translateX}px`);\r\n    translateX -= caseOpenWindowHolder.offsetWidth / 2; // position of marker\r\n    const itemNumber = Math.floor((translateX / 150) * -1);\r\n\r\n    src_button.classList.add('animated', 'bounceOut');\r\n    src_button.disabled = true;\r\n\r\n    caseOpenWindowHolder.classList.add('animated', 'flipInX');\r\n\r\n    setTimeout(() => {\r\n      src_button.disabled = false;\r\n      src_button.classList.remove('animated', 'bounceOut');\r\n      caseOpenWindowHolder.classList.remove('animated', 'flipInX');\r\n      resolve(itemNumber);\r\n    }, 6000);\r\n  });\r\n  \r\n}\r\n\r\nasync function determineItemWon(items) {\r\n  for (let i = 0; i < rollItemCount; i++) {\r\n    const randomItem = randomGenItem(items, distribution);\r\n    rolledItems.push(randomItem);\r\n    const newItem = createItemElement(randomItem);\r\n    newItem.classList.add('animatedItem', 'moveLeft');\r\n    itemHolder.appendChild(newItem);\r\n  }\r\n\r\n  const itemNumber = await initiateRollingProcess();\r\n\r\n  return rolledItems[itemNumber];\r\n}\r\n\r\nasync function getItemInfo(itemWon, itemWear) {\r\n  let price;\r\n  try {\r\n    console.log(itemWon)\r\n    const category = itemWon.category ? itemWon.category.name : '';\r\n    const data = await callApi(`data/price?&caseType=${selectedCase.type}&item=${itemWon.name}&&wear=${itemWear || ''}&itemID=${itemWon.id}&category=${category}`);\r\n    price = data.lowest_price;\r\n    const worth = parseFloat(price.slice(1));\r\n    moneyStatus += worth;\r\n    instantiateMoneyAmount('green');\r\n    updateMoneyStatus();\r\n  } catch (error) {\r\n    console.error('Error fetching item price:', error);\r\n    price = 'Market price not available';\r\n  }\r\n  let itemInfo = { name: itemWon.name, wear: itemWear, rarity: itemWon.rarity.name, price};\r\n\r\n  const minFloat = itemWon.min_float; \r\n  const maxFloat = itemWon.max_float; \r\n  \r\n  const float = (minFloat !== undefined && maxFloat !== undefined) \r\n      ? getRandomFloat(minFloat, maxFloat) \r\n      : undefined; \r\n\r\n  itemRarityCounts[itemWon.rarity]++;\r\n\r\n  if (float)\r\n    itemInfo.float = float;\r\n  \r\n\r\n  return itemInfo;\r\n}\r\n\r\n\r\nasync function displayWonItem(itemWon) {\r\n  const obtainedItem = document.createElement('div');\r\n  obtainedItem.classList.add('obtainedItem');\r\n\r\n  const img = document.createElement('img');\r\n  img.src = itemWon.image || './assets/images/xray.png';\r\n  img.classList.add('obtained-image');\r\n  obtainedItem.appendChild(img);\r\n\r\n  const rarityColor = getRarityColor(itemWon);\r\n  const rarityBox = document.createElement('div');\r\n  rarityBox.classList.add('obtained-item-rarity-box');\r\n  rarityBox.style.backgroundColor = rarityColor;\r\n\r\n  obtainedItem.classList.add('animated', 'fadeIn');\r\n\r\n  const itemWear = getRandomWear(itemWon);\r\n  const itemInfo = await getItemInfo(itemWon, itemWear);\r\n\r\n  const obtainedText = document.createElement('div');\r\n  obtainedText.classList.add('obtainedItemInfo');\r\n  for (const [key, value] of Object.entries(itemInfo)) {\r\n    const par = document.createElement('p');\r\n    par.textContent = `${key.toUpperCase()}: ${value}`;\r\n    if (key === 'rarity') par.style.textShadow = `4px 2px 4px ${rarityColor}`;\r\n    obtainedText.appendChild(par);\r\n  }\r\n\r\n  const bottomSection = document.createElement('div');\r\n  bottomSection.classList.add('bottomSection');\r\n  bottomSection.appendChild(obtainedText);\r\n\r\n  const buttonSection = document.createElement('div');\r\n  buttonSection.classList.add('buttonSection');\r\n  buttonSection.appendChild(reopenButton);\r\n  buttonSection.appendChild(backButton);\r\n\r\n  bottomSection.appendChild(buttonSection);\r\n  obtainedItem.appendChild(bottomSection);\r\n  caseOpenWindowHolder.appendChild(obtainedItem);\r\n\r\n  setTimeout(() => {\r\n    obtainedItem.style.borderRadius = getBorderRadius();\r\n    obtainedItem.style.borderColor = rarityColor;\r\n  }, 500);\r\n}\r\n\r\nasync function openCase() {\r\n  try {\r\n    clearUpWindow();\r\n\r\n    let casePrice = 0;\r\n    if(selectedCase.price) {\r\n      casePrice = parseFloat(selectedCase.price);\r\n    }\r\n    \r\n    moneyStatus -= keyPrice + casePrice;\r\n    updateMoneyStatus();\r\n\r\n    const caseItemList = [...selectedCase.contains];\r\n    if(selectedCase.contains_rare.length > 0) {\r\n      const knives = [...selectedCase.contains_rare];\r\n      let randomKnife = {...knives[getRandomInt(0, 8)], odds: 0.26};\r\n  \r\n      if (caseItemList.length < fixedItemCount) \r\n        caseItemList.push(randomKnife);\r\n    }\r\n    \r\n\r\n    distribution = createDistribution(caseItemList, 100, selectedCase);\r\n\r\n    const itemWon = await determineItemWon(caseItemList);\r\n    await displayWonItem(itemWon);\r\n  } catch (error) {\r\n    console.error('Error opening case:', error);\r\n  }\r\n}\r\n\r\nfunction updateMoneyStatus() {\r\n  statusText.textContent = 'State: ' + moneyStatus.toFixed(2) + '$';\r\n}\r\n\r\n\r\nfunction clearUpWindow() {\r\n  itemHolder.innerHTML = '';\r\n  const obtainedItem = document.querySelector('.obtainedItem');\r\n  if (obtainedItem && obtainedItem.classList.contains('obtainedItem')) {\r\n    caseOpenWindowHolder.removeChild(obtainedItem);\r\n  }\r\n  rolledItems = [];\r\n}\r\n\r\n\r\nfunction instantiateMoneyAmount(color) {\r\n\r\n  statusText.style.color = color;\r\n  statusText.classList.add('highlight-amount');\r\n  setTimeout(() => {\r\n    statusText.style.color = 'black';\r\n    statusText.classList.remove('highlight-amount');\r\n  }, 1000);\r\n}\r\n\r\n\r\nfunction setSelectedContainer(container) {\r\n  selectedCase = {...container};\r\n  fixedItemCount = container.contains.length + 1;\r\n  if (!selectedCase.caseRarityCounts) {\r\n    selectedCase.caseRarityCounts = getRarityOdds(selectedCase);\r\n  }\r\n\r\n  let caseImage = document.createElement('img');\r\n  const caseImageSource = selectedCase.image;\r\n  caseImage.src = caseImageSource;\r\n\r\n  caseImageSection.innerHTML = '';\r\n  caseImageSection.appendChild(caseImage);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFlBQVk7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxlQUFlO0FBQ3JEO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsVUFBVSxZQUFZO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLG9DQUFvQyxhQUFhO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXNlLW9wZW5pbmctc2ltLy4vc3JjL3V0aWxpdGllcy9tYXRoVXRpbHMuanM/YTE5ZCIsIndlYnBhY2s6Ly9jYXNlLW9wZW5pbmctc2ltLy4vc3JjL3V0aWxpdGllcy9jcmF0ZVV0aWxzLmpzP2YyMTUiLCJ3ZWJwYWNrOi8vY2FzZS1vcGVuaW5nLXNpbS8uL3NyYy9yZXBvcnQtc2VjdGlvbi5qcz9mMTJjIiwid2VicGFjazovL2Nhc2Utb3BlbmluZy1zaW0vLi9zcmMvc2VydmljZXMvc2VydmljZXMuanM/NWI1OSIsIndlYnBhY2s6Ly9jYXNlLW9wZW5pbmctc2ltLy4vc3JjL3V0aWxpdGllcy9zdHlsZVV0aWxzLmpzPzE0MzgiLCJ3ZWJwYWNrOi8vY2FzZS1vcGVuaW5nLXNpbS8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGdldFJhbmRvbUludChtaW4sIG1heCkge1xyXG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRSYW5kb21GbG9hdChtaW4sIG1heCkge1xyXG4gIHJldHVybiAoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluKS50b0ZpeGVkKDQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByYW5kb21HZW5JdGVtKGFycmF5LCBkaXN0cmlidXRpb24pIHtcclxuICBjb25zdCBpbmRleCA9IHJhbmRvbUluZGV4KGRpc3RyaWJ1dGlvbik7XHJcbiAgcmV0dXJuIGFycmF5W2luZGV4XTtcclxufVxyXG4gIFxyXG5mdW5jdGlvbiBjcmVhdGVEaXN0cmlidXRpb24oaXRlbXMsIHNpemUsIHNlbGVjdGVkQ2FzZSkge1xyXG4gIGNvbnN0IGRpc3RyaWJ1dGlvbiA9IFtdO1xyXG4gIGNvbnN0IHdlaWdodHMgPSBjYWxjdWxhdGVJdGVtV2VpZ2h0cyhpdGVtcywgc2VsZWN0ZWRDYXNlKTtcclxuICBcclxuICBjb25zdCBzdW0gPSB3ZWlnaHRzLnJlZHVjZSgoYWNjdW0sIGN1cnJWYWwpID0+IGFjY3VtICsgY3VyclZhbCk7XHJcbiAgY29uc3QgcXVhbnQgPSBzaXplIC8gc3VtO1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgd2VpZ2h0cy5sZW5ndGg7ICsraSkge1xyXG4gICAgY29uc3QgbGltaXQgPSBxdWFudCAqIHdlaWdodHNbaV07XHJcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGxpbWl0OyArK2opIHtcclxuICAgICAgZGlzdHJpYnV0aW9uLnB1c2goaSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBkaXN0cmlidXRpb247XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNhbGN1bGF0ZUl0ZW1XZWlnaHRzKGl0ZW1zLCBzZWxlY3RlZENhc2UpIHtcclxuICBjb25zdCB3ZWlnaHRzID0gaXRlbXMubWFwKFxyXG4gICAgaXRlbSA9PiAoaXRlbS5vZGRzIC8gKHNlbGVjdGVkQ2FzZS5jYXNlUmFyaXR5Q291bnRzW2l0ZW0ucmFyaXR5Lm5hbWVdIHx8IDEpIC8gMTAwKVxyXG4gICk7XHJcbiAgcmV0dXJuIHdlaWdodHM7XHJcbn1cclxuICBcclxuZnVuY3Rpb24gcmFuZG9tSW5kZXgoZGlzdHJpYnV0aW9uKSB7XHJcbiAgY29uc3QgaW5kZXggPSBNYXRoLmZsb29yKGRpc3RyaWJ1dGlvbi5sZW5ndGggKiBNYXRoLnJhbmRvbSgpKTsgLy8gcmFuZG9tIGluZGV4XHJcbiAgcmV0dXJuIGRpc3RyaWJ1dGlvbltpbmRleF07XHJcbn1cclxuXHJcblxyXG5leHBvcnQge2dldFJhbmRvbUludCwgZ2V0UmFuZG9tRmxvYXQsIHJhbmRvbUdlbkl0ZW0sIGNyZWF0ZURpc3RyaWJ1dGlvbiwgcmFuZG9tSW5kZXh9O1xyXG4gICIsImltcG9ydCB7IGdldFJhbmRvbUludCB9IGZyb20gJy4vbWF0aFV0aWxzJztcclxuXHJcbmZ1bmN0aW9uIGdldFJhcml0eU9kZHMoY3JhdGUpIHtcclxuICBjb25zdCByYXJpdHlDb3VudHMgPSB7XHJcbiAgICBDb25zdW1lcjogMCxcclxuICAgIEluZHVzdHJpYWw6IDAsXHJcbiAgICAnTWlsLVNwZWMgR3JhZGUnOiAwLFxyXG4gICAgUmVzdHJpY3RlZDogMCxcclxuICAgIENsYXNzaWZpZWQ6IDAsXHJcbiAgICBDb3ZlcnQ6IDAsXHJcbiAgICBDb250cmFiYW5kOiAwLFxyXG4gICAgJ0hpZ2ggR3JhZGUnOiAwLFxyXG4gICAgUmVtYXJrYWJsZTogMCxcclxuICAgIEV4b3RpYzogMCxcclxuICAgIEV4dHJhb3JkaW5hcnk6IDBcclxuICB9O1xyXG5cclxuICBjcmF0ZS5jb250YWlucy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICBjb25zdCByYXJpdHlOYW1lID0gaXRlbS5yYXJpdHkubmFtZTtcclxuXHJcbiAgICBpZiAocmFyaXR5Q291bnRzLmhhc093blByb3BlcnR5KHJhcml0eU5hbWUpKSB7XHJcbiAgICAgIHJhcml0eUNvdW50c1tyYXJpdHlOYW1lXSsrO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS53YXJuKGBVbmtub3duIHJhcml0eTogJHtyYXJpdHlOYW1lfWApO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBmaWx0ZXJlZFJhcml0eUNvdW50cyA9IE9iamVjdC5mcm9tRW50cmllcyhcclxuICAgIE9iamVjdC5lbnRyaWVzKHJhcml0eUNvdW50cykuZmlsdGVyKChbcmFyaXR5LCBjb3VudF0pID0+IGNvdW50ID4gMClcclxuICApO1xyXG5cclxuICByZXR1cm4gZmlsdGVyZWRSYXJpdHlDb3VudHM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFJhcml0eUNvbG9yKGl0ZW0pIHtcclxuXHJcbiAgaWYoaXRlbS5jYXRlZ29yeSkge1xyXG4gICAgaWYgKGl0ZW0uY2F0ZWdvcnkubmFtZSA9PT0gJ0tuaXZlcycgfHwgaXRlbS5jYXRlZ29yeS5uYW1lID09PSAnR2xvdmVzJylcclxuICAgICAgcmV0dXJuICcjZmZjYzAwJzsgXHJcbiAgfVxyXG4gIFxyXG4gIHN3aXRjaCAoaXRlbS5yYXJpdHkubmFtZSkge1xyXG4gICAgY2FzZSAnQ29uc3VtZXIgR3JhZGUnOlxyXG4gICAgICByZXR1cm4gJyNhZmFmYWYnO1xyXG4gICAgY2FzZSAnSW5kdXN0cmlhbCBHcmFkZSc6XHJcbiAgICAgIHJldHVybiAnIzY0OTZlMSc7IFxyXG4gICAgY2FzZSAnTWlsLVNwZWMgR3JhZGUnOlxyXG4gICAgICByZXR1cm4gJyM0YjY5Y2QnOyBcclxuICAgIGNhc2UgJ1Jlc3RyaWN0ZWQnOlxyXG4gICAgICByZXR1cm4gJyM4ODQ3ZmYnOyBcclxuICAgIGNhc2UgJ0NsYXNzaWZpZWQnOlxyXG4gICAgICByZXR1cm4gJyNkMzJjZTYnOyBcclxuICAgIGNhc2UgJ0NvdmVydCc6XHJcbiAgICAgIHJldHVybiAnI2ViNGI0Yic7IFxyXG4gICAgY2FzZSAnQ29udHJhYmFuZCc6XHJcbiAgICAgIHJldHVybiAnIzg4NmEwOCc7IFxyXG4gICAgXHJcbiAgICBjYXNlICdIaWdoIEdyYWRlJzpcclxuICAgICAgcmV0dXJuICcjNGI2OWNkJzsgXHJcbiAgICBjYXNlICdSZW1hcmthYmxlJzpcclxuICAgICAgcmV0dXJuICcjODg0N2ZmJzsgXHJcbiAgICBjYXNlICdFeG90aWMnOlxyXG4gICAgICByZXR1cm4gJyNkMzJjZTYnOyBcclxuICAgIGNhc2UgJ0V4dHJhb3JkaW5hcnknOlxyXG4gICAgICByZXR1cm4gJyNlYjRiNGInOyBcclxuXHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gJyc7IFxyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG5mdW5jdGlvbiBnZXRSYW5kb21XZWFyKGl0ZW0pIHtcclxuICBpZihpdGVtLndlYXJzKSB7XHJcbiAgICByZXR1cm4gaXRlbS53ZWFyc1tnZXRSYW5kb21JbnQoMCwgaXRlbS53ZWFycy5sZW5ndGgtMSldLm5hbWU7XHJcbiAgfVxyXG4gIHJldHVybiAnJztcclxufVxyXG5cclxuZXhwb3J0IHtnZXRSYXJpdHlDb2xvciwgZ2V0UmFyaXR5T2RkcywgZ2V0UmFuZG9tV2Vhcn07XHJcbiAgIiwiXHJcbi8vLy8gQ0FVVElPTiBSRUxBVEVEIFRPIENVU1RPTSBWQUxJREFUSU9OIFxyXG4vLyBNaXhpbmcgZGVmYXVsdCBodG1sIHZhbGlkYXRpb24gd2l0aCBjdXN0b20gcHJvdmlkZXMgZGlmZmljdWx0IHJlc3VsdHNcclxuLy8gZGlzYWJsZSBkZWZhdWx0IGh0bWwgdmFsaWRhdGlvbnMgaWYgcG9zc2libGVcclxuXHJcbmNvbnN0IHJlcG9ydEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXBvcnQtYnV0dG9uJyk7XHJcbmNvbnN0IHJlcG9ydERpYWxvZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZXBvcnQtZGlhbG9nJyk7XHJcbmNvbnN0IHN1Ym1pdGxvYWRpbmdJbmRpY2F0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3VibWl0TG9hZGluZ0luZGljYXRvcicpO1xyXG5cclxubGV0IG5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYW1lJyk7XHJcbmxldCBlbWFpbElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2UtbWFpbCcpO1xyXG5sZXQgaWRlYXNJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZXBvcnQnKTtcclxubGV0IGV4aXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZXhpdEJ1dHRvbicpO1xyXG5sZXQgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3N1Ym1pdEJ1dHRvbicpO1xyXG5sZXQgc3RhdHVzTGFiZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3RhdHVzTGFiZWwnKTtcclxuXHJcbnJlcG9ydEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAvLyBTaG93IHRoZSBkaWFsb2dcclxuICByZXBvcnREaWFsb2cuY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZWQnKTtcclxuICByZXBvcnREaWFsb2cuY2xhc3NMaXN0LmFkZCgnZmFkZUluUmVwb3J0Jyk7XHJcbiAgcmVwb3J0RGlhbG9nLnNob3dNb2RhbCgpO1xyXG4gIGluaXRpYWxpemVJbnB1dHMoKTtcclxuICBcclxufSk7XHJcblxyXG5leGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gcmVwb3J0RGlhbG9nLmNsb3NlKCkpO1xyXG5cclxuc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlU3VibWl0KTtcclxuXHJcbmZ1bmN0aW9uIGluaXRpYWxpemVJbnB1dHMoKSB7XHJcbiAgbmFtZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgbmFtZVZlcmlmaWNhdGlvbik7XHJcbiAgZW1haWxJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGVtYWlsVmVyaWZpY2F0aW9uKTtcclxuICBpZGVhc0lucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgaWRlYXNWZXJpZmljYXRpb24pO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoZXZlbnQpIHtcclxuXHJcbiAgc3RhdHVzTGFiZWwudGV4dENvbnRlbnQgPSAnJztcclxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICBsZXQgaXNWYWxpZCA9IHRydWU7XHJcblxyXG4gIGlmICghbmFtZVZlcmlmaWNhdGlvbigpKSBpc1ZhbGlkID0gZmFsc2U7XHJcbiAgaWYgKCFlbWFpbFZlcmlmaWNhdGlvbigpKSBpc1ZhbGlkID0gZmFsc2U7XHJcbiAgaWYgKCFpZGVhc1ZlcmlmaWNhdGlvbigpKSBpc1ZhbGlkID0gZmFsc2U7XHJcblxyXG4gIGlmIChpc1ZhbGlkKSB7XHJcbiAgICBcclxuICAgIGNvbnN0IHJlcG9ydE9iaiA9IHtcclxuICAgICAgbmFtZTogbmFtZUlucHV0LnZhbHVlLFxyXG4gICAgICBlbWFpbDogZW1haWxJbnB1dC52YWx1ZSxcclxuICAgICAgdGV4dDogaWRlYXNJbnB1dC52YWx1ZVxyXG4gICAgfTtcclxuXHJcbiAgICBsZXQgYmFzZVVybCA9ICcnO1xyXG4gIFxyXG4gICAgaWYocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgICBcclxuICAgICAgLy9iYXNlVXJsID0gJ2h0dHA6bG9jYWxob3N0OjU1MDAnOyBMb2NhbCBwcm9kIHRlc3RcclxuICAgICAgYmFzZVVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xyXG4gICAgICBiYXNlVXJsID0gYmFzZVVybC5zbGljZSgwLCAtMSk7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG5cclxuICAgICAgZW5hYmxlSW5kaWNhdG9yKCk7XHJcbiAgICAgIGRpc2FibGVCdXR0b24oKTtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vc2VuZC1lbWFpbGAsIHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShyZXBvcnRPYmopXHJcbiAgICAgICAgXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgc3RhdHVzTGFiZWwudGV4dENvbnRlbnQgPSAnVGhhbmsgeW91IGZvciB5b3VyIGZlZWRiYWNrISc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc3RhdHVzTGFiZWwudGV4dENvbnRlbnQgPSAnRmFpbGVkIHRvIHNlbmQgZmVlZGJhY2snO1xyXG4gICAgICAgIGVuYWJsZUJ1dHRvbigpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgc3RhdHVzTGFiZWwudGV4dENvbnRlbnQgPSBgRXJyb3I6ICR7ZXJyb3IubWVzc2FnZX1gO1xyXG4gICAgICBlbmFibGVCdXR0b24oKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgZmluYWxseSB7XHJcbiAgICAgIGRpc2FibGVJbmRpY2F0b3IoKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgc2V0VGltZW91dCgoKT0+e1xyXG4gICAgICByZXNldElucHV0cygpO1xyXG4gICAgICByZXBvcnREaWFsb2cuY2xvc2UoKTtcclxuICAgIH0sIDEwMDApO1xyXG4gICAgXHJcbiAgfVxyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gbmFtZVZlcmlmaWNhdGlvbigpIHtcclxuICBpZiAobmFtZUlucHV0LnZhbHVlLnRyaW0oKSA9PT0gJycpIHtcclxuICAgIG5hbWVJbnB1dC5zZXRDdXN0b21WYWxpZGl0eSgnV3JpdGUgeW91ciBuYW1lJyk7XHJcbiAgICBuYW1lSW5wdXQucmVwb3J0VmFsaWRpdHkoKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcblxyXG4gIG5hbWVJbnB1dC5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XHJcbiAgbmFtZUlucHV0LnJlcG9ydFZhbGlkaXR5KCk7XHJcblxyXG4gIHJldHVybiB0cnVlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBlbWFpbFZlcmlmaWNhdGlvbigpIHtcclxuXHJcbiAgLy8gSWYgY2hvc2VuIHRvIHdyaXRlIGVtYWlsIC0gd3JpdGUgaXQgcHJvcGVybHlcclxuICBpZiAoZW1haWxJbnB1dC52YWx1ZS50cmltKCkgPT09ICcnKSB7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcbiAgZWxzZSBpZiAoZW1haWxJbnB1dC52YWxpZGl0eS50eXBlTWlzbWF0Y2gpIHtcclxuICAgIGVtYWlsSW5wdXQuc2V0Q3VzdG9tVmFsaWRpdHkoJ01ha2Ugc3VyZSB0byBwcm92aWRlIHByb3BlciBlbWFpbCcpO1xyXG4gICAgZW1haWxJbnB1dC5yZXBvcnRWYWxpZGl0eSgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBlbWFpbElucHV0LnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcclxuICB9XHJcblxyXG4gIGVtYWlsSW5wdXQucmVwb3J0VmFsaWRpdHkoKTtcclxuICByZXR1cm4gdHJ1ZTtcclxufVxyXG5cclxuZnVuY3Rpb24gaWRlYXNWZXJpZmljYXRpb24oKSB7XHJcbiAgaWYgKGlkZWFzSW5wdXQudmFsdWUudHJpbSgpID09PSAnJykge1xyXG4gICAgaWRlYXNJbnB1dC5zZXRDdXN0b21WYWxpZGl0eSgnU2F5IHNvbWV0aGluZywgeW91ciBmZWVkYmFjayBpcyBpbXBvcnRhbnQgOiknKTtcclxuICAgIGlkZWFzSW5wdXQucmVwb3J0VmFsaWRpdHkoKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcblxyXG4gIGVsc2UgaWYgKGlkZWFzSW5wdXQudmFsdWUubGVuZ3RoIDwgMTUpIHtcclxuICAgIGlkZWFzSW5wdXQuc2V0Q3VzdG9tVmFsaWRpdHkoJ1RyeSB0byBiZSBhcyBpbnNpZ2h0ZnVsIGFzIHlvdSBjYW4hJyk7XHJcbiAgICBpZGVhc0lucHV0LnJlcG9ydFZhbGlkaXR5KCk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG4gIGVsc2Uge1xyXG4gICAgaWRlYXNJbnB1dC5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XHJcbiAgfVxyXG5cclxuICBpZGVhc0lucHV0LnJlcG9ydFZhbGlkaXR5KCk7XHJcbiAgcmV0dXJuIHRydWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlc2V0SW5wdXRzKCkge1xyXG4gIG5hbWVJbnB1dC52YWx1ZSA9ICcnO1xyXG4gIGVtYWlsSW5wdXQudmFsdWUgPSAnJztcclxuICBpZGVhc0lucHV0LnZhbHVlID0gJyc7XHJcbiAgc3RhdHVzTGFiZWwudGV4dENvbnRlbnQgPSAnJztcclxuICBlbmFibGVCdXR0b24oKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZW5hYmxlSW5kaWNhdG9yKCkge1xyXG4gIHN1Ym1pdGxvYWRpbmdJbmRpY2F0b3Iuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbn1cclxuZnVuY3Rpb24gZGlzYWJsZUluZGljYXRvcigpIHtcclxuICBzdWJtaXRsb2FkaW5nSW5kaWNhdG9yLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc2FibGVCdXR0b24oKSB7XHJcbiAgc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICBzdWJtaXRCdXR0b24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxufVxyXG5mdW5jdGlvbiBlbmFibGVCdXR0b24oKSB7XHJcbiAgc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgc3VibWl0QnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcmVwb3J0QnV0dG9uOyIsImFzeW5jIGZ1bmN0aW9uIGNhbGxBcGkodXJsUG9zdGZpeCkge1xyXG5cclxuICAvLyBDaGFuZ2UgdGhpcyBmb3IgcHJvZHVjdGlvbiBidWlsZCAoaXQgd29udCBiZSB1c2luZyBsb2NhbGhvc3QpXHJcbiAgbGV0IGJhc2VVcmwgPSAnJztcclxuICBcclxuICBpZihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XHJcbiAgICBcclxuICAgIC8vYmFzZVVybCA9ICdodHRwOmxvY2FsaG9zdDo1NTAwJzsgTG9jYWwgcHJvZCB0ZXN0XHJcbiAgICBiYXNlVXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XHJcbiAgICBiYXNlVXJsID0gYmFzZVVybC5zbGljZSgwLCAtMSk7XHJcbiAgfVxyXG4gIFxyXG4gIGxldCB1cmwgPSBgJHtiYXNlVXJsfS8ke3VybFBvc3RmaXh9YDtcclxuICBcclxuICByZXR1cm4gZmV0Y2godXJsKVxyXG4gICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIFN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0pXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgIHJldHVybiBudWxsOyBcclxuICAgIH0pO1xyXG59XHJcbiAgXHJcbmFzeW5jIGZ1bmN0aW9uIGZldGNoQ2FzZURhdGEoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjYWxsQXBpKCdkYXRhL2Nhc2VzJyk7XHJcbiAgICBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBjYXNlIGRhdGE6JywgZXJyb3IpO1xyXG4gICAgdGhyb3cgZXJyb3I7XHJcbiAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBmZXRjaENhcHN1bGVEYXRhKCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgY2FsbEFwaSgnZGF0YS9jYXBzdWxlcycpO1xyXG4gICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgY2Fwc3VsZSBkYXRhOicsIGVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZmV0Y2hTb3V2ZW5pckRhdGEoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjYWxsQXBpKCdkYXRhL3NvdXZlbmlycycpO1xyXG4gICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgc291dmVuaXIgZGF0YTonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGZldGNoQXV0b2dyYXBoQ2Fwc3VsZURhdGEoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjYWxsQXBpKCdkYXRhL2F1dG9ncmFwaF9jYXBzdWxlcycpO1xyXG4gICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgYXV0b2dyYXBoIGNhcHN1bGUgZGF0YTonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGZldGNoR3JhZmZpdGlEYXRhKCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgY2FsbEFwaSgnZGF0YS9ncmFmZml0aXMnKTtcclxuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGdyYWZmaXRpIGRhdGE6JywgZXJyb3IpO1xyXG4gICAgdGhyb3cgZXJyb3I7XHJcbiAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBmZXRjaFBpbkRhdGEoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjYWxsQXBpKCdkYXRhL3BpbnMnKTtcclxuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHBpbiBkYXRhOicsIGVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgXHJcbiAgY2FsbEFwaSwgXHJcbiAgZmV0Y2hDYXNlRGF0YSwgXHJcbiAgZmV0Y2hDYXBzdWxlRGF0YSwgXHJcbiAgZmV0Y2hTb3V2ZW5pckRhdGEsIFxyXG4gIGZldGNoQXV0b2dyYXBoQ2Fwc3VsZURhdGEsIFxyXG4gIGZldGNoR3JhZmZpdGlEYXRhLCBcclxuICBmZXRjaFBpbkRhdGEgXHJcbn07IiwiaW1wb3J0IHsgZ2V0UmFuZG9tSW50IH0gZnJvbSAnLi9tYXRoVXRpbHMnO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlTG9hZGluZ0luZGljYXRvcigpIHtcclxuICBjb25zdCBsb2FkaW5nSW5kaWNhdG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgbG9hZGluZ0luZGljYXRvci5jbGFzc05hbWUgPSAnbGRzLWVsbGlwc2lzJztcclxuICBsb2FkaW5nSW5kaWNhdG9yLmlubmVySFRNTCA9ICc8ZGl2PjwvZGl2PjxkaXY+PC9kaXY+PGRpdj48L2Rpdj48ZGl2PjwvZGl2Pic7XHJcbiAgcmV0dXJuIGxvYWRpbmdJbmRpY2F0b3I7XHJcbn1cclxuICBcclxuLy8gVXRpbGl0eSBmdW5jdGlvbiB0byBoaWRlIHRoZSBsb2FkaW5nIGluZGljYXRvciBhbmQgc2hvdyB0aGUgb3JpZ2luYWwgY29udGVudFxyXG5mdW5jdGlvbiBzaG93TG9hZGluZ0luZGljYXRvckluRWxlbWVudChlbGVtZW50KSB7XHJcbiAgY29uc3QgbG9hZGluZ0luZGljYXRvciA9IGNyZWF0ZUxvYWRpbmdJbmRpY2F0b3IoKTtcclxuICBsb2FkaW5nSW5kaWNhdG9yLmlkID0gJ2xvYWRpbmdJbmRpY2F0b3InO1xyXG4gIGVsZW1lbnQuaW5uZXJIVE1MID0gJyc7XHJcbiAgZWxlbWVudC5hcHBlbmRDaGlsZChsb2FkaW5nSW5kaWNhdG9yKTtcclxufVxyXG4gIFxyXG4vLyBVdGlsaXR5IGZ1bmN0aW9uIHRvIGhpZGUgdGhlIGxvYWRpbmcgaW5kaWNhdG9yXHJcbmZ1bmN0aW9uIGhpZGVMb2FkaW5nSW5kaWNhdG9ySW5FbGVtZW50KGVsZW1lbnQsIG9yaWdpbmFsQ29udGVudCkge1xyXG4gIGVsZW1lbnQuaW5uZXJIVE1MID0gb3JpZ2luYWxDb250ZW50O1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRCb3JkZXJSYWRpdXMoKSB7XHJcbiAgXHJcbiAgY29uc3QgYm9yZGVyUmFkaXVzSW5zdHJ1Y3Rpb25zID0gW1xyXG4gICAgJzEwcHggMjBweCAzMHB4IDQwcHgnLFxyXG4gICAgJzI1JSAxMCUnLFxyXG4gICAgJzEwJSAyMCUgNDAlIDIwJTsnLFxyXG4gICAgJzEwJSAvIDUwJScsXHJcbiAgICAnMTBweCAxMDBweCAvIDEyMHB4JyxcclxuICAgICc1MCUgMjAlIC8gMTAlIDQwJSdcclxuICBdO1xyXG5cclxuICByZXR1cm4gYm9yZGVyUmFkaXVzSW5zdHJ1Y3Rpb25zW2dldFJhbmRvbUludCgwLCBib3JkZXJSYWRpdXNJbnN0cnVjdGlvbnMubGVuZ3RoLTEpXTtcclxuXHJcbn1cclxuXHJcbmV4cG9ydCB7Y3JlYXRlTG9hZGluZ0luZGljYXRvciwgc2hvd0xvYWRpbmdJbmRpY2F0b3JJbkVsZW1lbnQsIGhpZGVMb2FkaW5nSW5kaWNhdG9ySW5FbGVtZW50LCBnZXRCb3JkZXJSYWRpdXN9OyIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBEb250IHVzZSB0aGUgd29yZCBjYXNlIGluIHRoZSBjb2RlXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuaW1wb3J0IHsgZ2V0UmFuZG9tSW50LCBnZXRSYW5kb21GbG9hdCwgcmFuZG9tR2VuSXRlbSwgY3JlYXRlRGlzdHJpYnV0aW9uIH0gZnJvbSAnLi91dGlsaXRpZXMvbWF0aFV0aWxzJztcclxuaW1wb3J0IHsgZ2V0UmFyaXR5T2RkcywgZ2V0UmFyaXR5Q29sb3IsIGdldFJhbmRvbVdlYXIgfSBmcm9tICcuL3V0aWxpdGllcy9jcmF0ZVV0aWxzJztcclxuaW1wb3J0IHJlcG9ydEJ1dHRvbiBmcm9tICcuL3JlcG9ydC1zZWN0aW9uJzsgLy8gbmVlZCB0byBsb2FkIHJlcG9ydCBzZWN0aW9uLCBvdGhlcndpc2UgYWRkIGluIHdlYnBhY2sgZW50cmllc1xyXG5pbXBvcnQgJy4vaW5kZXguY3NzJztcclxuaW1wb3J0ICcuL2xvYWRpbmdJbmRpY2F0b3IuY3NzJztcclxuaW1wb3J0IHsgZmV0Y2hDYXNlRGF0YSwgY2FsbEFwaSB9IGZyb20gJy4vc2VydmljZXMvc2VydmljZXMnO1xyXG5pbXBvcnQgeyBnZXRCb3JkZXJSYWRpdXMgfSBmcm9tICcuL3V0aWxpdGllcy9zdHlsZVV0aWxzJztcclxuXHJcbmxldCBzdGF0dXNUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3N0YXR1cycpO1xyXG5sZXQgbW9uZXlTdGF0dXMgPSA0LjM1O1xyXG5jb25zdCBrZXlQcmljZSA9IDIuMzQ7XHJcblxyXG5sZXQgaXRlbUhvbGRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pdGVtLWhvbGRlcicpO1xyXG5jb25zdCBjYXNlT3BlbldpbmRvd0hvbGRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXNlLW9wZW4td2luZG93LWhvbGRlcicpO1xyXG5sZXQgY2FzZUltYWdlU2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXNlLWltYWdlLXNlY3Rpb24nKTtcclxuXHJcbmNvbnN0IGNhc2VMb2FkaW5nSW5kaWNhdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Nhc2VMb2FkaW5nSW5kaWNhdG9yJyk7XHJcbmNvbnN0IGludGVyYWN0aW9uQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmludGVyYWN0aW9uLWNvbnRhaW5lcicpO1xyXG5cclxubGV0IGNvbnRhaW5lclNlbGVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXNlJyk7XHJcblxyXG5jb25zdCBjb250YWluZXJUeXBlU2VsZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbnRhaW5lci10eXBlJyk7XHJcblxyXG5jb25zdCBidXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcub3Blbi1idXR0b24nKTtcclxubGV0IHJlb3BlbkJ1dHRvbjtcclxubGV0IGJhY2tCdXR0b247XHJcblxyXG5sZXQgY29udGFpbmVycyA9IFtdO1xyXG5sZXQgc2VsZWN0ZWRDYXNlID0ge307XHJcbmxldCBmaXhlZEl0ZW1Db3VudCA9IDE4O1xyXG5cclxuY29uc3Qgcm9sbEl0ZW1Db3VudCA9IDE1MDtcclxubGV0IHJvbGxlZEl0ZW1zID0gW107XHJcbmxldCBkaXN0cmlidXRpb24gPSBbXTtcclxuXHJcbmNvbnN0IGl0ZW1SYXJpdHlDb3VudHMgPSB7XHJcbiAgJ0NvbnN1bWVyIEdyYWRlJzogMCxcclxuICAnSW5kdXN0cmlhbCBHcmFkZSc6IDAsXHJcbiAgJ01pbC1TcGVjIEdyYWRlJzogMCxcclxuICBSZXN0cmljdGVkOiAwLFxyXG4gIENsYXNzaWZpZWQ6IDAsXHJcbiAgQ292ZXJ0OiAwLFxyXG4gIENvbnRyYWJhbmQ6IDAsXHJcbiAgJ0hpZ2ggR3JhZGUnOiAwLFxyXG4gIFJlbWFya2FibGU6IDAsXHJcbiAgRXhvdGljOiAwLFxyXG4gIEV4dHJhb3JkaW5hcnk6IDBcclxufTtcclxuXHJcblxyXG5pbml0aWFsaXplQ29udGFpbmVyTG9hZCgpO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGl6ZUNvbnRhaW5lckxvYWQoY29udGFpbmVyVHlwZSA9ICdjYXNlcycpIHtcclxuICB0cnkge1xyXG4gICAgXHJcbiAgICBzd2l0Y2goY29udGFpbmVyVHlwZSkge1xyXG4gICAgICBjYXNlICdjYXNlcyc6XHJcbiAgICAgICAgY29udGFpbmVycyA9IGF3YWl0IGNhbGxBcGkoJ2RhdGEvY2FzZXMnKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnY2Fwc3VsZXMnOlxyXG4gICAgICAgIGNvbnRhaW5lcnMgPSBhd2FpdCBjYWxsQXBpKCdkYXRhL2NhcHN1bGVzJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ3NvdXZlbmlycyc6XHJcbiAgICAgICAgY29udGFpbmVycyA9IGF3YWl0IGNhbGxBcGkoJ2RhdGEvc291dmVuaXJzJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ2F1dG9ncmFwaF9jYXBzdWxlcyc6XHJcbiAgICAgICAgY29udGFpbmVycyA9IGF3YWl0IGNhbGxBcGkoJ2RhdGEvYXV0b2dyYXBoX2NhcHN1bGVzJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ2dyYWZmaXRpcyc6XHJcbiAgICAgICAgY29udGFpbmVycyA9IGF3YWl0IGNhbGxBcGkoJ2RhdGEvZ3JhZmZpdGlzJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ3BpbnMnOlxyXG4gICAgICAgIGNvbnRhaW5lcnMgPSBhd2FpdCBjYWxsQXBpKCdkYXRhL3BpbnMnKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBjb250YWluZXJzID0gW107XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcblxyXG4gICAgY29udGFpbmVyU2VsZWN0LmlubmVySFRNTCA9ICcnO1xyXG5cclxuICAgIGNvbnRhaW5lcnMubWFwKChjb250YWluZXIsIGluZGV4KSA9PiB7XHJcbiAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcclxuICAgICAgb3B0aW9uLnZhbHVlID0gaW5kZXg7XHJcbiAgICAgIG9wdGlvbi50ZXh0Q29udGVudCA9IGNvbnRhaW5lci5wcmljZSA/IGAke2NvbnRhaW5lci5uYW1lfSAoJHtjb250YWluZXIucHJpY2V9JClgIDogY29udGFpbmVyLm5hbWU7XHJcbiAgICAgIGNvbnRhaW5lclNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgc2V0U2VsZWN0ZWRDb250YWluZXIoY29udGFpbmVyc1tjb250YWluZXJTZWxlY3QudmFsdWVdKTtcclxuICAgIGNhc2VPcGVuV2luZG93SG9sZGVyLmRpc2FibGVkID0gdHJ1ZTtcclxuXHJcbiAgICBkaXNwbGF5SW5pdGlhbEl0ZW1zKCk7XHJcbiAgICBpbml0aWFsaXplRXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBjb250YWluZXJzOicsIGVycm9yKTtcclxuICAgIGludGVyYWN0aW9uQ29udGFpbmVyLmlubmVySFRNTCA9ICdUaGVyZSB3YXMgYSBwcm9ibGVtIGxvYWRpbmcgY29udGFpbmVycywgcmVmcmVzaCB0aGUgcGFnZSBvciB0cnkgYWdhaW4gbGF0ZXIuJztcclxuICB9IGZpbmFsbHkge1xyXG4gICAgY2FzZUxvYWRpbmdJbmRpY2F0b3Iuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIGludGVyYWN0aW9uQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVPcGVuQnV0dG9uQ2xpY2soKSB7XHJcbiAgb3BlbkNhc2UoKTtcclxuICBpbnN0YW50aWF0ZU1vbmV5QW1vdW50KCdyZWQnKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQmFja0J1dHRvbkNsaWNrKCkge1xyXG4gIGNvbnN0IGxhc3RDaGlsZCA9IGNhc2VPcGVuV2luZG93SG9sZGVyLmxhc3RDaGlsZDtcclxuICBpZiAobGFzdENoaWxkICYmIGxhc3RDaGlsZC5jbGFzc0xpc3QuY29udGFpbnMoJ29idGFpbmVkSXRlbScpKSB7XHJcbiAgICBjYXNlT3BlbldpbmRvd0hvbGRlci5yZW1vdmVDaGlsZChsYXN0Q2hpbGQpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdGlhbGl6ZUV2ZW50TGlzdGVuZXJzKCkge1xyXG4gIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU9wZW5CdXR0b25DbGljayk7XHJcblxyXG4gIHJlb3BlbkJ1dHRvbiA9IGJ1dHRvbi5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gIHJlb3BlbkJ1dHRvbi50ZXh0Q29udGVudCA9IGBPcGVuIGFub3RoZXIgKC0ke2tleVByaWNlfSQpYDtcclxuICByZW9wZW5CdXR0b24uc3R5bGUuY29sb3IgPSAnd2hpdGUnO1xyXG5cclxuICByZW9wZW5CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVPcGVuQnV0dG9uQ2xpY2spO1xyXG5cclxuICBiYWNrQnV0dG9uID0gYnV0dG9uLmNsb25lTm9kZSh0cnVlKTtcclxuXHJcbiAgYmFja0J1dHRvbi50ZXh0Q29udGVudCA9ICdCYWNrJztcclxuICBiYWNrQnV0dG9uLnN0eWxlLmNvbG9yID0gJ3doaXRlJztcclxuXHJcbiAgYmFja0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUJhY2tCdXR0b25DbGljayk7XHJcblxyXG4gIGNvbnRhaW5lclNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiBzZXRTZWxlY3RlZENvbnRhaW5lcihjb250YWluZXJzW2NvbnRhaW5lclNlbGVjdC52YWx1ZV0pKTtcclxuXHJcbiAgY29udGFpbmVyVHlwZVNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBzZWxlY3RlZFR5cGUgPSBjb250YWluZXJUeXBlU2VsZWN0LnZhbHVlO1xyXG4gICAgaW5pdGlhbGl6ZUNvbnRhaW5lckxvYWQoc2VsZWN0ZWRUeXBlKTsgLy8gTG9hZCBjb250YWluZXJzIGJhc2VkIG9uIHNlbGVjdGVkIHR5cGVcclxuICB9KTtcclxuXHJcbn1cclxuXHJcblxyXG5cclxuZnVuY3Rpb24gZGlzcGxheUluaXRpYWxJdGVtcygpIHtcclxuXHJcbiAgY29uc3QgY2FzZUl0ZW1zTGlzdCA9IFsuLi5zZWxlY3RlZENhc2UuY29udGFpbnNdO1xyXG5cclxuICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcclxuICAgIGxldCByYW5kb21JdGVtID0gY2FzZUl0ZW1zTGlzdFtnZXRSYW5kb21JbnQoMCwgY2FzZUl0ZW1zTGlzdC5sZW5ndGggLSAxKV07XHJcblxyXG4gICAgbGV0IG5ld0l0ZW0gPSBjcmVhdGVJdGVtRWxlbWVudChyYW5kb21JdGVtKTtcclxuICAgIFxyXG4gICAgaXRlbUhvbGRlci5hcHBlbmRDaGlsZChuZXdJdGVtKTtcclxuXHJcbiAgfVxyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlSXRlbUVsZW1lbnQoaXRlbSkge1xyXG4gIGNvbnN0IG5ld0l0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBuZXdJdGVtLmNsYXNzTGlzdC5hZGQoJ2l0ZW0nKTtcclxuXHJcbiAgY29uc3QgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcbiAgaWYgKGl0ZW0uaW1hZ2UpIHtcclxuICAgIGlmKGl0ZW0uY2F0ZWdvcnkpIHtcclxuICAgICAgaWYgKGl0ZW0uY2F0ZWdvcnkubmFtZSA9PT0gJ0tuaXZlcycgfHwgaXRlbS5jYXRlZ29yeS5uYW1lID09PSAnR2xvdmVzJylcclxuICAgICAgICBpbWcuY2xhc3NMaXN0LmFkZCgnZXhjZWVkaW5nbHlSYXJlJyk7XHJcbiAgICAgICAgLy8gd2VicGFjayBmaXhcclxuICAgIH1cclxuXHJcbiAgICBpbWcuc3JjID0gaXRlbS5pbWFnZTtcclxuICB9XHJcbiAgZWxzZVxyXG4gICAgaW1nLnNyYyA9ICcuL2Fzc2V0cy9pbWFnZXMveHJheS5wbmcnO1xyXG5cclxuICBpbWcuY2xhc3NMaXN0LmFkZCgnaW1hZ2UnKTtcclxuXHJcbiAgY29uc3QgcmFyaXR5Q29sb3IgPSBnZXRSYXJpdHlDb2xvcihpdGVtKTtcclxuXHJcbiAgbmV3SXRlbS5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgbGluZWFyLWdyYWRpZW50KHdoaXRlIDQwJSwgJHtyYXJpdHlDb2xvcn0pYDtcclxuXHJcbiAgY29uc3QgcmFyaXR5Qm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgcmFyaXR5Qm94LmNsYXNzTGlzdC5hZGQoJ2l0ZW0tcmFyaXR5LWJveCcpO1xyXG4gIHJhcml0eUJveC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSByYXJpdHlDb2xvcjtcclxuXHJcbiAgbmV3SXRlbS5hcHBlbmRDaGlsZChpbWcpO1xyXG4gIG5ld0l0ZW0uYXBwZW5kQ2hpbGQocmFyaXR5Qm94KTtcclxuXHJcbiAgcmV0dXJuIG5ld0l0ZW07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRpYXRlUm9sbGluZ1Byb2Nlc3MoKSB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICBsZXQgdHJhbnNsYXRlWCA9IGdldFJhbmRvbUludCgtNTAwMCwgLTYwMDApO1xyXG4gICAgY2FzZU9wZW5XaW5kb3dIb2xkZXIuc3R5bGUuc2V0UHJvcGVydHkoJy0tcmFuZG9tLXRyYW5zbGF0ZVhiJywgYCR7dHJhbnNsYXRlWH1weGApO1xyXG4gICAgdHJhbnNsYXRlWCAtPSBjYXNlT3BlbldpbmRvd0hvbGRlci5vZmZzZXRXaWR0aCAvIDI7IC8vIHBvc2l0aW9uIG9mIG1hcmtlclxyXG4gICAgY29uc3QgaXRlbU51bWJlciA9IE1hdGguZmxvb3IoKHRyYW5zbGF0ZVggLyAxNTApICogLTEpO1xyXG5cclxuICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdhbmltYXRlZCcsICdib3VuY2VPdXQnKTtcclxuICAgIGJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcblxyXG4gICAgY2FzZU9wZW5XaW5kb3dIb2xkZXIuY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZWQnLCAnZmxpcEluWCcpO1xyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBidXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGVkJywgJ2JvdW5jZU91dCcpO1xyXG4gICAgICBjYXNlT3BlbldpbmRvd0hvbGRlci5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRlZCcsICdmbGlwSW5YJyk7XHJcbiAgICAgIHJlc29sdmUoaXRlbU51bWJlcik7XHJcbiAgICB9LCA2MDAwKTtcclxuICB9KTtcclxuICBcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZGV0ZXJtaW5lSXRlbVdvbihpdGVtcykge1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcm9sbEl0ZW1Db3VudDsgaSsrKSB7XHJcbiAgICBjb25zdCByYW5kb21JdGVtID0gcmFuZG9tR2VuSXRlbShpdGVtcywgZGlzdHJpYnV0aW9uKTtcclxuICAgIHJvbGxlZEl0ZW1zLnB1c2gocmFuZG9tSXRlbSk7XHJcbiAgICBjb25zdCBuZXdJdGVtID0gY3JlYXRlSXRlbUVsZW1lbnQocmFuZG9tSXRlbSk7XHJcbiAgICBuZXdJdGVtLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGVkSXRlbScsICdtb3ZlTGVmdCcpO1xyXG4gICAgaXRlbUhvbGRlci5hcHBlbmRDaGlsZChuZXdJdGVtKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGl0ZW1OdW1iZXIgPSBhd2FpdCBpbml0aWF0ZVJvbGxpbmdQcm9jZXNzKCk7XHJcblxyXG4gIHJldHVybiByb2xsZWRJdGVtc1tpdGVtTnVtYmVyXTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0SXRlbUluZm8oaXRlbVdvbiwgaXRlbVdlYXIpIHtcclxuICBsZXQgcHJpY2U7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnNvbGUubG9nKGl0ZW1Xb24pXHJcbiAgICBjb25zdCBjYXRlZ29yeSA9IGl0ZW1Xb24uY2F0ZWdvcnkgPyBpdGVtV29uLmNhdGVnb3J5Lm5hbWUgOiAnJztcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjYWxsQXBpKGBkYXRhL3ByaWNlPyZjYXNlVHlwZT0ke3NlbGVjdGVkQ2FzZS50eXBlfSZpdGVtPSR7aXRlbVdvbi5uYW1lfSYmd2Vhcj0ke2l0ZW1XZWFyIHx8ICcnfSZpdGVtSUQ9JHtpdGVtV29uLmlkfSZjYXRlZ29yeT0ke2NhdGVnb3J5fWApO1xyXG4gICAgcHJpY2UgPSBkYXRhLmxvd2VzdF9wcmljZTtcclxuICAgIGNvbnN0IHdvcnRoID0gcGFyc2VGbG9hdChwcmljZS5zbGljZSgxKSk7XHJcbiAgICBtb25leVN0YXR1cyArPSB3b3J0aDtcclxuICAgIGluc3RhbnRpYXRlTW9uZXlBbW91bnQoJ2dyZWVuJyk7XHJcbiAgICB1cGRhdGVNb25leVN0YXR1cygpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBpdGVtIHByaWNlOicsIGVycm9yKTtcclxuICAgIHByaWNlID0gJ01hcmtldCBwcmljZSBub3QgYXZhaWxhYmxlJztcclxuICB9XHJcbiAgbGV0IGl0ZW1JbmZvID0geyBuYW1lOiBpdGVtV29uLm5hbWUsIHdlYXI6IGl0ZW1XZWFyLCByYXJpdHk6IGl0ZW1Xb24ucmFyaXR5Lm5hbWUsIHByaWNlfTtcclxuXHJcbiAgY29uc3QgbWluRmxvYXQgPSBpdGVtV29uLm1pbl9mbG9hdDsgXHJcbiAgY29uc3QgbWF4RmxvYXQgPSBpdGVtV29uLm1heF9mbG9hdDsgXHJcbiAgXHJcbiAgY29uc3QgZmxvYXQgPSAobWluRmxvYXQgIT09IHVuZGVmaW5lZCAmJiBtYXhGbG9hdCAhPT0gdW5kZWZpbmVkKSBcclxuICAgICAgPyBnZXRSYW5kb21GbG9hdChtaW5GbG9hdCwgbWF4RmxvYXQpIFxyXG4gICAgICA6IHVuZGVmaW5lZDsgXHJcblxyXG4gIGl0ZW1SYXJpdHlDb3VudHNbaXRlbVdvbi5yYXJpdHldKys7XHJcblxyXG4gIGlmIChmbG9hdClcclxuICAgIGl0ZW1JbmZvLmZsb2F0ID0gZmxvYXQ7XHJcbiAgXHJcblxyXG4gIHJldHVybiBpdGVtSW5mbztcclxufVxyXG5cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGRpc3BsYXlXb25JdGVtKGl0ZW1Xb24pIHtcclxuICBjb25zdCBvYnRhaW5lZEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBvYnRhaW5lZEl0ZW0uY2xhc3NMaXN0LmFkZCgnb2J0YWluZWRJdGVtJyk7XHJcblxyXG4gIGNvbnN0IGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG4gIGltZy5zcmMgPSBpdGVtV29uLmltYWdlIHx8ICcuL2Fzc2V0cy9pbWFnZXMveHJheS5wbmcnO1xyXG4gIGltZy5jbGFzc0xpc3QuYWRkKCdvYnRhaW5lZC1pbWFnZScpO1xyXG4gIG9idGFpbmVkSXRlbS5hcHBlbmRDaGlsZChpbWcpO1xyXG5cclxuICBjb25zdCByYXJpdHlDb2xvciA9IGdldFJhcml0eUNvbG9yKGl0ZW1Xb24pO1xyXG4gIGNvbnN0IHJhcml0eUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gIHJhcml0eUJveC5jbGFzc0xpc3QuYWRkKCdvYnRhaW5lZC1pdGVtLXJhcml0eS1ib3gnKTtcclxuICByYXJpdHlCb3guc3R5bGUuYmFja2dyb3VuZENvbG9yID0gcmFyaXR5Q29sb3I7XHJcblxyXG4gIG9idGFpbmVkSXRlbS5jbGFzc0xpc3QuYWRkKCdhbmltYXRlZCcsICdmYWRlSW4nKTtcclxuXHJcbiAgY29uc3QgaXRlbVdlYXIgPSBnZXRSYW5kb21XZWFyKGl0ZW1Xb24pO1xyXG4gIGNvbnN0IGl0ZW1JbmZvID0gYXdhaXQgZ2V0SXRlbUluZm8oaXRlbVdvbiwgaXRlbVdlYXIpO1xyXG5cclxuICBjb25zdCBvYnRhaW5lZFRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBvYnRhaW5lZFRleHQuY2xhc3NMaXN0LmFkZCgnb2J0YWluZWRJdGVtSW5mbycpO1xyXG4gIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGl0ZW1JbmZvKSkge1xyXG4gICAgY29uc3QgcGFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgcGFyLnRleHRDb250ZW50ID0gYCR7a2V5LnRvVXBwZXJDYXNlKCl9OiAke3ZhbHVlfWA7XHJcbiAgICBpZiAoa2V5ID09PSAncmFyaXR5JykgcGFyLnN0eWxlLnRleHRTaGFkb3cgPSBgNHB4IDJweCA0cHggJHtyYXJpdHlDb2xvcn1gO1xyXG4gICAgb2J0YWluZWRUZXh0LmFwcGVuZENoaWxkKHBhcik7XHJcbiAgfVxyXG5cclxuICBjb25zdCBib3R0b21TZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgYm90dG9tU2VjdGlvbi5jbGFzc0xpc3QuYWRkKCdib3R0b21TZWN0aW9uJyk7XHJcbiAgYm90dG9tU2VjdGlvbi5hcHBlbmRDaGlsZChvYnRhaW5lZFRleHQpO1xyXG5cclxuICBjb25zdCBidXR0b25TZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgYnV0dG9uU2VjdGlvbi5jbGFzc0xpc3QuYWRkKCdidXR0b25TZWN0aW9uJyk7XHJcbiAgYnV0dG9uU2VjdGlvbi5hcHBlbmRDaGlsZChyZW9wZW5CdXR0b24pO1xyXG4gIGJ1dHRvblNlY3Rpb24uYXBwZW5kQ2hpbGQoYmFja0J1dHRvbik7XHJcblxyXG4gIGJvdHRvbVNlY3Rpb24uYXBwZW5kQ2hpbGQoYnV0dG9uU2VjdGlvbik7XHJcbiAgb2J0YWluZWRJdGVtLmFwcGVuZENoaWxkKGJvdHRvbVNlY3Rpb24pO1xyXG4gIGNhc2VPcGVuV2luZG93SG9sZGVyLmFwcGVuZENoaWxkKG9idGFpbmVkSXRlbSk7XHJcblxyXG4gIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgb2J0YWluZWRJdGVtLnN0eWxlLmJvcmRlclJhZGl1cyA9IGdldEJvcmRlclJhZGl1cygpO1xyXG4gICAgb2J0YWluZWRJdGVtLnN0eWxlLmJvcmRlckNvbG9yID0gcmFyaXR5Q29sb3I7XHJcbiAgfSwgNTAwKTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gb3BlbkNhc2UoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNsZWFyVXBXaW5kb3coKTtcclxuXHJcbiAgICBsZXQgY2FzZVByaWNlID0gMDtcclxuICAgIGlmKHNlbGVjdGVkQ2FzZS5wcmljZSkge1xyXG4gICAgICBjYXNlUHJpY2UgPSBwYXJzZUZsb2F0KHNlbGVjdGVkQ2FzZS5wcmljZSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIG1vbmV5U3RhdHVzIC09IGtleVByaWNlICsgY2FzZVByaWNlO1xyXG4gICAgdXBkYXRlTW9uZXlTdGF0dXMoKTtcclxuXHJcbiAgICBjb25zdCBjYXNlSXRlbUxpc3QgPSBbLi4uc2VsZWN0ZWRDYXNlLmNvbnRhaW5zXTtcclxuICAgIGlmKHNlbGVjdGVkQ2FzZS5jb250YWluc19yYXJlLmxlbmd0aCA+IDApIHtcclxuICAgICAgY29uc3Qga25pdmVzID0gWy4uLnNlbGVjdGVkQ2FzZS5jb250YWluc19yYXJlXTtcclxuICAgICAgbGV0IHJhbmRvbUtuaWZlID0gey4uLmtuaXZlc1tnZXRSYW5kb21JbnQoMCwgOCldLCBvZGRzOiAwLjI2fTtcclxuICBcclxuICAgICAgaWYgKGNhc2VJdGVtTGlzdC5sZW5ndGggPCBmaXhlZEl0ZW1Db3VudCkgXHJcbiAgICAgICAgY2FzZUl0ZW1MaXN0LnB1c2gocmFuZG9tS25pZmUpO1xyXG4gICAgfVxyXG4gICAgXHJcblxyXG4gICAgZGlzdHJpYnV0aW9uID0gY3JlYXRlRGlzdHJpYnV0aW9uKGNhc2VJdGVtTGlzdCwgMTAwLCBzZWxlY3RlZENhc2UpO1xyXG5cclxuICAgIGNvbnN0IGl0ZW1Xb24gPSBhd2FpdCBkZXRlcm1pbmVJdGVtV29uKGNhc2VJdGVtTGlzdCk7XHJcbiAgICBhd2FpdCBkaXNwbGF5V29uSXRlbShpdGVtV29uKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igb3BlbmluZyBjYXNlOicsIGVycm9yKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVwZGF0ZU1vbmV5U3RhdHVzKCkge1xyXG4gIHN0YXR1c1RleHQudGV4dENvbnRlbnQgPSAnU3RhdGU6ICcgKyBtb25leVN0YXR1cy50b0ZpeGVkKDIpICsgJyQnO1xyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gY2xlYXJVcFdpbmRvdygpIHtcclxuICBpdGVtSG9sZGVyLmlubmVySFRNTCA9ICcnO1xyXG4gIGNvbnN0IG9idGFpbmVkSXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vYnRhaW5lZEl0ZW0nKTtcclxuICBpZiAob2J0YWluZWRJdGVtICYmIG9idGFpbmVkSXRlbS5jbGFzc0xpc3QuY29udGFpbnMoJ29idGFpbmVkSXRlbScpKSB7XHJcbiAgICBjYXNlT3BlbldpbmRvd0hvbGRlci5yZW1vdmVDaGlsZChvYnRhaW5lZEl0ZW0pO1xyXG4gIH1cclxuICByb2xsZWRJdGVtcyA9IFtdO1xyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gaW5zdGFudGlhdGVNb25leUFtb3VudChjb2xvcikge1xyXG5cclxuICBzdGF0dXNUZXh0LnN0eWxlLmNvbG9yID0gY29sb3I7XHJcbiAgc3RhdHVzVGV4dC5jbGFzc0xpc3QuYWRkKCdoaWdobGlnaHQtYW1vdW50Jyk7XHJcbiAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICBzdGF0dXNUZXh0LnN0eWxlLmNvbG9yID0gJ2JsYWNrJztcclxuICAgIHN0YXR1c1RleHQuY2xhc3NMaXN0LnJlbW92ZSgnaGlnaGxpZ2h0LWFtb3VudCcpO1xyXG4gIH0sIDEwMDApO1xyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gc2V0U2VsZWN0ZWRDb250YWluZXIoY29udGFpbmVyKSB7XHJcbiAgc2VsZWN0ZWRDYXNlID0gey4uLmNvbnRhaW5lcn07XHJcbiAgZml4ZWRJdGVtQ291bnQgPSBjb250YWluZXIuY29udGFpbnMubGVuZ3RoICsgMTtcclxuICBpZiAoIXNlbGVjdGVkQ2FzZS5jYXNlUmFyaXR5Q291bnRzKSB7XHJcbiAgICBzZWxlY3RlZENhc2UuY2FzZVJhcml0eUNvdW50cyA9IGdldFJhcml0eU9kZHMoc2VsZWN0ZWRDYXNlKTtcclxuICB9XHJcblxyXG4gIGxldCBjYXNlSW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcclxuICBjb25zdCBjYXNlSW1hZ2VTb3VyY2UgPSBzZWxlY3RlZENhc2UuaW1hZ2U7XHJcbiAgY2FzZUltYWdlLnNyYyA9IGNhc2VJbWFnZVNvdXJjZTtcclxuXHJcbiAgY2FzZUltYWdlU2VjdGlvbi5pbm5lckhUTUwgPSAnJztcclxuICBjYXNlSW1hZ2VTZWN0aW9uLmFwcGVuZENoaWxkKGNhc2VJbWFnZSk7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///435\n")}},__webpack_exports__={};__webpack_modules__[435]()})();